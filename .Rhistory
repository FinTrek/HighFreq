head(foo)
has.Vo(x)
has.Vo(x, which = TRUE)
has.Ad(x) && is.OHLC(x)
index_at
cnames
is.null(indexAt)
head(xx)
undebug(to.period)
foo <- .Call("toPeriod", try.xts(SPY), end_points, TRUE, 5, FALSE,
FALSE, colnames(SPY), PACKAGE="xts")
foo <- .Call("toPeriod", SPY, 1:11, TRUE, 5, FALSE,
FALSE, colnames(SPY), PACKAGE="xts")
has.Vo(SPY[, 1:4], which=TRUE)
foo <- .Call("toPeriod", SPY, end_points, FALSE, FALSE, FALSE,
FALSE, colnames(SPY), PACKAGE="xts")
head(SPY)
foo <- .Call("toPeriod", SPY[, 1], 1:11, TRUE, 5, FALSE,
FALSE, colnames(SPY), PACKAGE="xts")
foo <- .Call("toPeriod", SPY[, 1], 1:11, FALSE, FALSE, FALSE,
FALSE, colnames(SPY), PACKAGE="xts")
foo <- .Call("toPeriod", SPY[, 1], 1:11, FALSE, FALSE, FALSE,
FALSE, colnames(SPY[, 1]), PACKAGE="xts")
colnames(SPY[, 1])
foo <- .Call("toPeriod", SPY[, 1], end_points, TRUE, 5, FALSE,
FALSE, colnames(SPY[, 1]), PACKAGE="xts")
foo <- .Call("toPeriod", SPY[, 1], 1:11, FALSE, FALSE, FALSE,
FALSE, colnames(SPY[, 1]), PACKAGE="xts")
foo <- .Call("toPeriod", SPY, 1:11, FALSE, FALSE, FALSE,
FALSE, colnames(SPY), PACKAGE="xts")
NROW(SPY)
foo <- .Call("toPeriod", SPY, c(1:11, NROW(SPY)), FALSE, FALSE, FALSE,
FALSE, colnames(SPY), PACKAGE="xts")
is.integer(as.integer(end_points))
foo <- .Call("toPeriod", SPY, as.integer(end_points), TRUE, 5, FALSE,
FALSE, colnames(SPY), PACKAGE="xts")
foo <- .Call("toPeriod", SPY, as.integer(end_points), FALSE, FALSE, FALSE,
FALSE, colnames(SPY), PACKAGE="xts")
foo <- .Call("toPeriod", SPY[, 1], as.integer(end_points), FALSE, FALSE, FALSE,
FALSE, colnames(SPY[, 1]), PACKAGE="xts")
sum(is.na(SPY))
foo <- .Call("toPeriod", SPY, endpoints(SPY, "minutes", 1), TRUE, 5, FALSE,
FALSE, colnames(SPY), PACKAGE="xts")
foo <- .Call("toPeriod", SPY, endpoints(SPY, "minutes", 1), has.Vo(SPY),
has.Vo(SPY, which=TRUE), has.Ad(SPY) && is.OHLC(SPY),
FALSE, colnames(SPY), PACKAGE="xts")
head(foo)
has.Vo(SPY)
foo <- .Call("toPeriod", SPY, endpoints(SPY, "minutes", 1), TRUE,
has.Vo(SPY, which=TRUE), has.Ad(SPY) && is.OHLC(SPY),
FALSE, colnames(SPY), PACKAGE="xts")
has.Vo(SPY, which=TRUE)
foo <- .Call("toPeriod", SPY, endpoints(SPY, "minutes", 1), TRUE,
5, has.Ad(SPY) && is.OHLC(SPY),
FALSE, colnames(SPY), PACKAGE="xts")
blah <- has.Vo(SPY, which=TRUE)
class(blah)
class(5)
foo <- .Call("toPeriod", SPY, as.integer(end_points), TRUE, as.integer(5), FALSE,
FALSE, colnames(SPY), PACKAGE="xts")
foo <- .Call("toPeriod", SPY, as.integer(end_points), TRUE, as.integer(5),
FALSE, FALSE, colnames(SPY), PACKAGE="xts")
head(foo)
head(end_points)
head(end_points)
tail(end_points)
end_points <- c(n_row-inter_val*num_agg+inter_val*(0:num_agg)-1, n_row)
head(end_points)
tail(end_points)
NROW(end_points)
end_points <- c(0, n_row-inter_val*num_agg+inter_val*(0:num_agg))
NROW(end_points)
end_points <- c(0, n_row-inter_val*num_agg+inter_val*(0:num_agg)-1, n_row)
head(foo)
end_points <- c(0, n_row-inter_val*num_agg+inter_val*(0:num_agg)-1, n_row)
foo <- .Call("toPeriod", SPY, as.integer(end_points), TRUE, as.integer(5),
FALSE, FALSE, colnames(SPY), PACKAGE="xts")
head(foo)
is.integer(NCOL(SPY))
is.integer(5)
to_period <- function(x_ts,
period="minutes", k=1,
end_points=endpoints(x, period, k)) {
.Call("toPeriod", x_ts, as.integer(end_points), TRUE, NCOL(SPY),
FALSE, FALSE, colnames(x_ts), PACKAGE="xts")
}  # end to_period
foo <- to_period(x_ts=SPY["2009"], period="days")
to_period <- function(x_ts,
period="minutes", k=1,
end_points=endpoints(x_ts, period, k)) {
.Call("toPeriod", x_ts, as.integer(end_points), TRUE, NCOL(x_ts),
FALSE, FALSE, colnames(x_ts), PACKAGE="xts")
}  # end to_period
foo <- to_period(x_ts=SPY["2009"], period="days")
bar <- to.period(x_ts=SPY["2009"], period="days")
bar <- to.period(x=SPY["2009"], period="days")
identical(foo, bar)
head(foo)
head(bar)
bar <- to.period(x=SPY["2009"], period="days", name=colnames(SPY))
identical(foo, bar)
head(bar)
bar <- to.period(x=SPY["2009"], period="days", name=na_me(SPY))
head(bar)
identical(foo, bar)
inter_val <- 10
n_row <- NROW(SPY)
num_agg <- n_row %/% inter_val
end_points <- c(0, n_row-inter_val*num_agg+inter_val*(0:num_agg))
foo <- .Call("toPeriod", SPY, as.integer(end_points), TRUE, as.integer(5),
FALSE, FALSE, colnames(SPY), PACKAGE="xts")
bar <- to_period(x_ts=SPY["2009"], end_points=end_points)
identical(foo, bar)
head(foo)
head(bar)
foo <- .Call("toPeriod", SPY["2009"], as.integer(end_points), TRUE,
NCOL(SPY), FALSE, FALSE, colnames(SPY), PACKAGE="xts")
identical(foo, bar)
head(foo)
head(bar)
foo <- .Call("toPeriod", SPY, as.integer(end_points), TRUE,
NCOL(SPY), FALSE, FALSE, colnames(SPY), PACKAGE="xts")
bar <- to_period(x_ts=SPY, end_points=end_points)
identical(foo, bar)
library(HighFreq)
library(HighFreq)
inter_val <- 10
n_row <- NROW(SPY)
num_agg <- n_row %/% inter_val
end_points <- c(0, n_row-inter_val*num_agg+inter_val*(0:num_agg))
foo <- .Call("toPeriod", SPY, as.integer(end_points), TRUE,
NCOL(SPY), FALSE, FALSE, colnames(SPY), PACKAGE="xts")
ls()
bar <- to_period(x_ts=SPY, end_points=end_points)
identical(foo, bar)
to_period
library(rutils)
end_points <- end_points(env_etf$VTI, inter_val=7, off_set=4)
head(end_points)
ls()
end_points <- end_points(env_etf$VTI, inter_val=7, off_set=4)
end_points <- end_points(env_etf$VTI, inter_val=7, off_set=3)
head(end_points)
ls()
inter_val <- 10
end_points <- rutils::end_points(SPY["2009"], inter_val=inter_val)
library(HighFreq)
xts:::to_period
xts:::to.period
library(HighFreq)
library(HighFreq)
library(HighFreq)
inter_val <- 10
end_points <- rutils::end_points(SPY["2009"], inter_val=inter_val)
ls()
SPY10 <- to_period(x_ts=SPY["2009"], end_points=end_points)
ls()
vol_ohlc
vari_ance <- vol_ohlc(SPY["2009"])
dim(vari_ance)
dim(SPY["2009"])
head(SPY["2009"])
dim9SPY10
dim(SPY10)
vari_ance10 <- vol_ohlc(SPY10)
dim(vari_ance)
foo <- cumsum(vari_ance)
foo <- cumsum(vari_ance)[index(vari_ance10)]
dim(foo)
dim(vari_ance10)
foo <- diff(cumsum(vari_ance)[index(vari_ance10)])
head(foo)
head(vari_ance10)
foo <- foo/inter_val
head(foo)
sum(foo<0)
sum(foo)
foo[1]
foo[1] <- foo[2]
sum(foo<0)
roll_hurst <- log(vari_ance10/foo)/log(inter_val)
sum(roll_hurst)
sum(foo==0)
vari_ance <- diff(cumsum(vari_ance)[index(vari_ance10)])/inter_val
roll_hurst <- ifelse((vari_ance==0) | (vari_ance10==0),
NA,
log(vari_ance10/vari_ance)/log(inter_val))
sum(is.na(roll_hurst))
roll_hurst <- na.locf(roll_hurst)
sum(is.na(roll_hurst))
head(roll_hurst)
roll_hurst[1] <- roll_hurst[2]
head(roll_hurst)
na_me(roll_hurst)
paste0(na_me(roll_hurst), ".Hurst")
paste0(sym_bol, ".Hurst")
colnames(roll_hurst) <- paste0(sym_bol, ".Hurst")
colnames(roll_hurst)
na_me(get(sym_bol))
season_hurst <- season_ality(roll_hurst)
colnames(season_hurst) <- paste0(sym_bol, ".season_hurst")
x11()
chart_Series(x=season_hurst,
name=paste(colnames(season_hurst), "daily seasonality"))
inter_val <- 10
end_points <- rutils::end_points(SPY, inter_val=inter_val)
SPY10 <- to_period(x_ts=SPY, end_points=end_points)
vari_ance10 <- vol_ohlc(SPY10)
vari_ance <- vol_ohlc(SPY)
vari_ance <- diff(cumsum(vari_ance)[index(vari_ance10)])/inter_val
roll_hurst <- ifelse((vari_ance==0) | (vari_ance10==0),
NA,
log(vari_ance10/vari_ance)/log(inter_val))
roll_hurst[1] <- roll_hurst[2]
roll_hurst <- na.locf(roll_hurst)
colnames(roll_hurst) <- paste0(sym_bol, ".Hurst")
season_hurst <- season_ality(roll_hurst)
colnames(season_hurst) <- paste0(sym_bol, ".season_hurst")
chart_Series(x=season_hurst,
name=paste(colnames(season_hurst), "daily seasonality"))
season_hurst
head(season_hurst, 33)
tail(season_hurst, 33)
dim(roll_hurst)
dim(vari_ance)
dim(vari_ance10)
dim(SPY10)
dim(SPY)
vari_ance <- vol_ohlc(SPY)
dim(vari_ance)
vari_ance <- diff(cumsum(vari_ance)[index(vari_ance10)])/inter_val
roll_hurst <- ifelse((vari_ance==0) | (vari_ance10==0),
NA,
log(vari_ance10/vari_ance)/log(inter_val))
roll_hurst[1] <- roll_hurst[2]
roll_hurst <- na.locf(roll_hurst)
colnames(roll_hurst) <- paste0(sym_bol, ".Hurst")
foo <- roll_hurst[index(SPY)]
head(foo, 33)
foo <- cbind(SPY, roll_hurst)[, 2]
head(foo, 33)
foo <- cbind(SPY[, 1], roll_hurst)[, 2]
head(foo, 33)
foo <- na.locf(foo)
foo <- na.omit(foo)
head(foo, 33)
season_hurst <- season_ality(foo)
colnames(season_hurst) <- paste0(sym_bol, ".season_hurst")
chart_Series(x=season_hurst,
name=paste(colnames(season_hurst), "daily seasonality"))
season_hurst <- season_ality(foo["2009/"])
colnames(season_hurst) <- paste0(sym_bol, ".season_hurst")
x11()
chart_Series(x=season_hurst,
name=paste(colnames(season_hurst), "daily seasonality"))
season_hurst <- season_ality(foo["2010/"])
colnames(season_hurst) <- paste0(sym_bol, ".season_hurst")
chart_Series(x=season_hurst,
name=paste(colnames(season_hurst), "daily seasonality"))
season_hurst <- season_ality(foo["2011/"])
colnames(season_hurst) <- paste0(sym_bol, ".season_hurst")
chart_Series(x=season_hurst,
name=paste(colnames(season_hurst), "daily seasonality"))
season_hurst <- season_ality(foo["/2012"])
colnames(season_hurst) <- paste0(sym_bol, ".season_hurst")
chart_Series(x=season_hurst,
name=paste(colnames(season_hurst), "daily seasonality"))
head(season_hurst, 33)
foo <- lapply(0:(inter_val-1), function(off_set) {
end_points <- rutils::end_points(SPY, inter_val=inter_val, off_set=off_set)
# aggregate over 10-minute end_points:
SPY10 <- to_period(x_ts=SPY, end_points=end_points)
vari_ance10 <- vol_ohlc(SPY10)
vari_ance <- vol_ohlc(SPY)
vari_ance <- diff(cumsum(vari_ance)[index(vari_ance10)])/inter_val
roll_hurst <- ifelse((vari_ance==0) | (vari_ance10==0),
NA,
log(vari_ance10/vari_ance)/log(inter_val))
roll_hurst[1] <- roll_hurst[2]
roll_hurst <- na.locf(roll_hurst)
#  log((x_ts10[, 2]-x_ts10[, 3])/vol_xts)/log(10))
colnames(roll_hurst) <- paste0(sym_bol, ".Hurst")
season_hurst <- season_ality(roll_hurst)
})  # end lapply
class(foo)
head(foo[[1]])
head(foo[[2]])
bar <- rutils::end_points(SPY, inter_val=inter_val, off_set=0)
head(bar)
bar <- rutils::end_points(SPY, inter_val=inter_val, off_set=1)
head(bar)
dim(SPY)
dim(foo[[2]])
foo <- lapply(0:(inter_val-1), function(off_set) {
end_points <- rutils::end_points(SPY, inter_val=inter_val, off_set=off_set)
# aggregate over 10-minute end_points:
SPY10 <- to_period(x_ts=SPY, end_points=end_points)
vari_ance10 <- vol_ohlc(SPY10)
vari_ance <- vol_ohlc(SPY)
vari_ance <- diff(cumsum(vari_ance)[index(vari_ance10)])/inter_val
roll_hurst <- ifelse((vari_ance==0) | (vari_ance10==0),
NA,
log(vari_ance10/vari_ance)/log(inter_val))
roll_hurst[1] <- roll_hurst[2]
roll_hurst <- na.locf(roll_hurst)
#  log((x_ts10[, 2]-x_ts10[, 3])/vol_xts)/log(10))
colnames(roll_hurst) <- paste0(sym_bol, ".Hurst")
roll_hurst
})  # end lapply
head(foo[[1]])
head(foo[[2]])
sum(is.na(foo[[2]]))
dim(foo[[2]])
dim(foo[[1]])
bar <- do_call_rbind(foo)
dim(bar)
dim(SPY)
head(bar)
head(SPY)
tail(bar)
tail(SPY)
season_hurst <- season_ality(bar)
isOrdered( .index(bar) )
which(.index(bar)==(.index(bar)[-1]))
in_dex <- which(.index(bar)==(.index(bar)[-1]))
bar[625424:625434]
bar[625421:625434]
bar[625424] <- mean(bar[625424:625434])
bar <- bar[-(625424:625434)]
bar[625421:625434]
tail(bar)
dim(bar)
dim(SPY)
season_hurst <- season_ality(bar)
colnames(season_hurst) <- paste0(sym_bol, ".season_hurst")
chart_Series(x=season_hurst,
name=paste(colnames(season_hurst), "daily seasonality"))
bar <- tail(SPY, 11)
bar
bar <- tail(SPY[, 1], 11)
bar
rbind(bar, bar)
head(foo[[1]])
tail(foo[[1]])
tail(foo[[2]])
op_en <- Op(SPY)
clo_se <- lag.xts(Cl(SPY), k=-1)
bar <- which(!(op_en==clo_se))
head(bar)
length(bar)
head(op_en)
head(clo_se)
head(SPY)
length(bar)
dim(SPY)
TTR::volatility
xts::lag.xts
bar <- SPY["2012-11-11"]
head(bar)
bar <- SPY["2012-11-14"]
head(bar)
dim(bar)
bar <- rbind(0, bar[-NROW(bar), ])
bar <- bar[-NROW(bar), ]
dim(bar)
bar <- rbind(rep(0, NCOL(bar)), bar)
bar <- SPY["2012-11-14"]
bar <- lag(bar)
head(bar)
xts::lag.xts
price_jumps
library(HighFreq)
price_jumps
library(HighFreq)
library(HighFreq)
vari_ance <- vari_ance(SPY)
foo <- vari_ance(SPY, calc_method="garman.klass_yz")
library(HighFreq)
rutils::lag.xts(env_etf$VTI, k=10)
ls("package:rutils")
library(rutils)
rutils::lag.xts(env_etf$VTI, k=10)
library(HighFreq)
library(HighFreq)
vari_ance <- vari_ance(SPY)
foo <- vari_ance(SPY, calc_method="rogers.satchell")
head(cbind(vari_ance, foo))
foo <- cbind(vari_ance, foo)
head(foo, 33)
tail(foo, 33)
vari_ance
HighFreq::vari_ance()
HighFreq::vari_ance
1.34/2
1-0.67
library(HighFreq)
library(HighFreq)
library(HighFreq)
vari_ance <- vari_ance(SPY)
foo <- vari_ance(SPY, calc_method="yang.zhang")
foo <- cbind(vari_ance, foo)
head(foo)
head(foo, 33)
sapply(foo, sum)
in_dex <- seq(from=as.POSIXct("2016-01-01 00:00:00"),
to=as.POSIXct("2016-01-30 00:00:00"), by="1 sec")
length(in_dex)
x_ts <- xts(cumsum(rnorm(length(in_dex))), order.by=in_dex)
head(x_ts)
oh_lc <- xts::to.period(x=x_ts, period="minutes")
head(oh_lc)
tail(oh_lc)
vari_ance <- vari_ance(oh_lc)
sum(vari_ance)
x_ts <- xts(cumprod(rnorm(length(in_dex), sd=0.01)), order.by=in_dex)
head(x_ts)
tail(x_ts)
x_ts <- xts(cumprod(1+rnorm(length(in_dex), sd=0.01)), order.by=in_dex)
tail(x_ts)
head(x_ts)
x_ts <- xts(exp(cumsum(rnorm(length(in_dex), sd=0.01))), order.by=in_dex)
tail(x_ts)
head(x_ts)
x_ts <- xts(exp(cumsum(rnorm(length(in_dex), sd=0.01))), order.by=in_dex)
tail(x_ts)
x_ts <- xts(exp(cumsum(rnorm(length(in_dex), sd=0.01))), order.by=in_dex)
tail(x_ts)
x_ts <- xts(exp(cumsum(rnorm(length(in_dex), sd=0.001))), order.by=in_dex)
tail(x_ts)
head(x_ts)
oh_lc <- xts::to.period(x=x_ts, period="minutes")
head(oh_lc)
tail(oh_lc)
vari_ance <- vari_ance(oh_lc)
sum(vari_ance)
meth_ods <- c("close", "garman.klass", "rogers.satchell", "garman.klass_yz", "yang.zhang")
meth_ods
sapply(meth_ods, function(meth_od) {
sum(vari_ance(oh_lc, calc_method=meth_od))
})
re_turns <- rnorm(length(in_dex), sd=0.001)
sample(1:11, replace=TRUE)
sample(1:11, replace=TRUE)
boot_strap <- sapply(1:100, function(x) {
boot_sample <- sample(re_turns, replace=TRUE)
x_ts <- xts(exp(cumsum(boot_sample)), order.by=in_dex)
# aggregate to minutes OHLC data
oh_lc <- xts::to.period(x=x_ts, period="minutes")
# calculate variance estimates
sapply(meth_ods, function(meth_od) {
sum(vari_ance(oh_lc, calc_method=meth_od))
})  # end sapply
})  # end sapply
head(boot_strap)
head(t(boot_strap))
apply(boot_strap, MARGIN=1, sd)
library(HighFreq)
getwd()
save(boot_strap, file="C:/Develop/data/boot_strap.RData")
library(HighFreq)
library(HighFreq)
library(HighFreq)
library(HighFreq)
devtools::install_github('dmlc/xgboost', subdir='R-package')
install.packages("stringi")
devtools::install_github('dmlc/xgboost', subdir='R-package')
devtools::install_github('xgboost/R-package')
install.packages("drat")
drat:::addRepo("dmlc")
install.packages("xgboost", repos="http://dmlc.ml/drat/", type = "source")
library(HighFreq)
?parallel
?mclapply
library(parallel)
?mclapply
paws <- function(x, sleep_time) {
Sys.sleep(sleep_time)
x
}  # end paws
clus_ters <- makeCluster(no_cores)
no_cores <- detectCores() - 1
clus_ters <- makeCluster(no_cores)
foo <- parLapply(clus_ters, 1:10, paws, sleep_time=0.01)
foo
foo <- mclapply(1:10, paws, mc.cores=no_cores, sleep_time=0.01)
foo <- mclapply(1:10, paws, mc.cores=1, sleep_time=0.01)
foo
library(devtools)
install_github(repo="algoquant/rutils")
ls("package:rutils")
na_me
install_github(repo="algoquant/HighFreq")
install_github(repo="algoquant/HighFreq")
install.packages("devtools")
library(devtools)
install_github(repo="algoquant/HighFreq")
install_github(repo="algoquant/rutils")
install_github(repo="algoquant/HighFreq")
library(HighFreq)
library(HighFreq)
season_volume <- season_ality(Vo(get(sym_bol)))
season_data <- season_volume
x11()
chart_xts(season_data,
name=paste(colnames(season_data), "daily seasonality"),
ylim=c(min(season_data), max(season_data)/2))
x11()
chart_Series(x=season_data,
name=paste(colnames(season_data), "daily seasonality"))
rutils::chart_xts(season_data,
name=paste(colnames(season_data), "daily seasonality"),
ylim=c(min(season_data), max(season_data)/2))
