getwd()
.rs.rpc.get_package_install_context()
Sys.getenv("RLIBSUSER")
.rs.defaultLibPathIsWriteable()
install.packages(pkgs="HighFreq", repos=NULL, type="source", lib="C:/Users/Jerzy/Downloads")
install.packages(pkgs="C:/Develop/R/HighFreq", repos=NULL, type="source", lib="C:/Users/Jerzy/Downloads")
library(HighFreq)
library(quantmod)
library(HighFreq)
.rs.rpc.get_package_install_context()
library(HighFreq)
install.packages(pkgs="C:/Develop/R/HighFreq", repos=NULL, type="source", lib="C:/Users/Jerzy/Downloads")
library(HighFreq)
install.packages(pkgs="C:/Develop/R/HighFreq", repos=NULL, type="source", lib="C:/Users/Jerzy/Documents/R/win-library/3.1")
library(HighFreq)
install.packages(pkgs="C:/Develop/R/HighFreq", repos=NULL, type="source", lib="C:/Users/Jerzy/Documents/R/win-library/3.1")
library(HighFreq)
install.packages(pkgs="C:/Develop/R/HighFreq", repos=NULL, type="source")
library(HighFreq)
install.packages(pkgs="C:/Develop/R/HighFreq", repos=NULL, type="source")
library(HighFreq)
setwd("C:/Develop/data")
blah <- read.xls("table.instruments.xlsx")
dim(blah)
head(blah)
class(blah)
.rs.rpc.get_package_install_context()
.libPaths()
.libPaths()
R.home()
normalizePath(R.home())
Sys.getenv("libPaths")
Sys.getenv(".libPaths")
Sys.getenv(".Library")
Sys.getenv("Library")
.Library
normalizePath(.Library)
normalizePath(R.home())
normalizePath(R.home("Library"))
?install.packages
?getOption
options("repos")
getOption("repos")
pack_info <- installed.packages()  # matrix of packages
pack_info["xts", ]  # get info for package "xts"
class(pack_info["xts", ])
dim(pack_info["xts", ])
is.vector(pack_info["xts", ])
names(pack_info["xts", ])
getOption("defaultPackages")
library(devtools)
install.packages("devtools")
install.packages("devtools")
library(devtools)
install_github("rstudio/devtools")
install_github("hadley/devtools")
?install_github
install_github(repo="hadley/devtools", lib="C:/Users/Jerzy/Downloads")
install_github(repo="hadley/devtools", "C:/Users/Jerzy/Downloads")
install.packages("devtools")
install.packages("devtools")
library(devtools)
install_github("hadley/devtools")
?file.copy
install_github(repo="hadley/babynames")
install.packages("babynames")
install.packages("babynames")
install.packages("xts")
install.packages("babynames")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
library(devtools)
install_github(repo="hadley/babynames")
install_github(repo="hadley/babynames")
install_github(repo="hadley/babynames")
install_github("hadley/devtools")
install_github("hadley/devtools")
install_github("hadley/devtools")
install.packages("devtools")
install.packages("devtools")
library(devtools)
build_github_devtools()
install.packages("devtools")
.libPaths()
install_github("hadley/devtools")
library(devtools)
install_github("hadley/devtools")
install_github("hadley/devtools")
install.packages("devtools")
library(HighFreq)
library(HighFreq)
library(devtools)
find_rtools()
install_github("hadley/devtools")
library(devtools)
build_github_devtools()
install_github(repo="hadley/babynames")
install_github(repo="hadley/babynames")
library(babynames)
ls()
library(qmao)
do.call.rbind
library(HighFreq)
library(HighFreq)
sym_bol <- "EEM"
file_dir <- file.path(data_dir, sym_bol)
data_dir <- "E:/mktdata/sec/"
file_dir <- file.path(data_dir, sym_bol)
file_list <- list.files(file_dir)
file_names <- file.path(file_dir, file_list)
daily_xts <- sapply(tail(file_names), function(file_name) {
cat("loading", file_name, "\n")
data_name <- load(file_name)
get(data_name)
})
length(daily_xts)
daily_xts <- lapply(daily_xts, scrub_agg)
daily_xts <- do_call_rbind(daily_xts)
colnames(daily_xts) <- sapply(strsplit(colnames(daily_xts), split="[.]"),
function(strng) paste(sym_bol, strng[-1], sep="."))
head(daily_xts)
Sys.setenv(TZ="America/New_York")  # Set the time-zone to GMT
setwd("C:/Develop/data")
options(digits.secs=6)
options(digits=5)
options(stringsAsFactors=FALSE)
options(max.print=80)
head(daily_xts)
chartSeries(daily_xts, name=sym_bol, theme=chartTheme("white"))
?install.packages
ls()
ls()
library(HighFreq)
