n_cols <- NCOL(re_turns)
vari_ance <- roll::roll_var(re_turns, width=wid_th)
vari_ance <- zoo::na.locf(vari_ance)
vari_ance[is.na(vari_ance)] <- 0
# calculate rolling Sharpe of S&P500 portfolio
returns_width <- rutils::diff_it(log(price_s), lagg=wid_th)
weight_s <- returns_width/sqrt(wid_th*vari_ance)
weight_s[vari_ance==0] <- 0
weight_s[1:wid_th, ] <- 1
weight_s[is.na(weight_s)] <- 0
weight_s <- weight_s/sqrt(rowSums(weight_s^2))
weight_s[is.na(weight_s)] <- 0
weight_s <- rutils::lag_it(weight_s)
sum(is.na(weight_s))
# calculate portfolio profits and losses
pnl_s <- weight_s*re_turns
# Calculate transaction costs
bid_offer <- 0.001
cost_s <- 0.5*bid_offer*abs(rutils::diff_it(weight_s))
pnl_s <- (pnl_s - cost_s)
pnl_s <- exp(cumsum(pnl_s))
pnl_s <- rowMeans(pnl_s)
pnl_s
}  # end backtest_rolling
pnl_s <- backtest_rolling(wid_th=252, re_turns=re_turns,
price_s=price_s, bid_offer=bid_offer)
rm(backtest_rolling)
source("C:/Develop/R/lecture_slides/scripts/back_test.R")
pnl_s <- backtest_rolling(wid_th=252, re_turns=re_turns,
price_s=price_s, bid_offer=bid_offer)
width_s <- seq(50, 300, by=50)
# perform sapply loop over lamb_das
pro_files <- sapply(width_s, backtest_rolling, re_turns=re_turns,
price_s=price_s, bid_offer=bid_offer)
colnames(pro_files) <- paste0("width=", width_s)
pro_files <- xts(pro_files, index(price_s))
x11(width=6, height=7)
plot_theme <- chart_theme()
plot_theme$col$line.col <-
colorRampPalette(c("blue", "red"))(NCOL(pro_files))
chart_Series(pro_files,
theme=plot_theme, name="Cumulative Returns of S&P500 Momentum Strategies")
legend("bottomleft", legend=colnames(pro_files),
inset=0.0, bg="white", cex=0.7, lwd=rep(6, NCOL(re_turns)),
col=plot_theme$col$line.col, bty="n")
x11(width=6, height=4)
plot_theme <- chart_theme()
plot_theme$col$line.col <-
colorRampPalette(c("blue", "red"))(NCOL(pro_files))
chart_Series(pro_files,
theme=plot_theme, name="Cumulative Returns of S&P500 Momentum Strategies")
legend("bottomleft", legend=colnames(pro_files),
inset=0.0, bg="white", cex=0.7, lwd=rep(6, NCOL(re_turns)),
col=plot_theme$col$line.col, bty="n")
plot_theme <- chart_theme()
plot_theme$col$line.col <-
colorRampPalette(c("blue", "red"))(NCOL(pro_files))
chart_Series(pro_files,
theme=plot_theme, name="Cumulative Returns of S&P500 Momentum Strategies")
legend("bottomleft", legend=colnames(pro_files),
inset=0.1, bg="white", cex=0.7, lwd=rep(6, NCOL(re_turns)),
col=plot_theme$col$line.col, bty="n")
plot_theme <- chart_theme()
plot_theme$col$line.col <-
colorRampPalette(c("blue", "red"))(NCOL(pro_files))
chart_Series(pro_files,
theme=plot_theme, name="Cumulative Returns of S&P500 Momentum Strategies")
legend("bottomleft", legend=colnames(pro_files),
inset=0.05, bg="white", cex=0.7, lwd=rep(6, NCOL(re_turns)),
col=plot_theme$col$line.col, bty="n")
plot_theme <- chart_theme()
plot_theme$col$line.col <-
colorRampPalette(c("blue", "red"))(NCOL(pro_files))
chart_Series(pro_files,
theme=plot_theme, name="Cumulative Returns of S&P500 Momentum Strategies")
legend("bottomleft", legend=colnames(pro_files),
inset=0.02, bg="white", cex=0.7, lwd=rep(6, NCOL(re_turns)),
col=plot_theme$col$line.col, bty="n")
width_s <- seq(5, 50, by=5)
pro_files <- sapply(width_s, backtest_rolling, re_turns=re_turns,
price_s=price_s, bid_offer=bid_offer, tre_nd=(-1))
colnames(pro_files) <- paste0("width=", width_s)
pro_files <- xts(pro_files, index(price_s))
plot_theme <- chart_theme()
plot_theme$col$line.col <-
colorRampPalette(c("blue", "red"))(NCOL(pro_files))
chart_Series(pro_files,
theme=plot_theme, name="Cumulative Returns of S&P500 Mean-reverting Strategies")
legend("bottomleft", legend=colnames(pro_files),
inset=0.02, bg="white", cex=0.7, lwd=rep(6, NCOL(re_turns)),
col=plot_theme$col$line.col, bty="n")
width_s <- seq(5, 50, by=5)
pro_files <- sapply(width_s, backtest_rolling, re_turns=re_turns,
price_s=price_s, bid_offer=bid_offer, tre_nd=(-1))
colnames(pro_files) <- paste0("width=", width_s)
pro_files <- xts(pro_files, index(price_s))
plot_theme <- chart_theme()
plot_theme$col$line.col <-
colorRampPalette(c("blue", "red"))(NCOL(pro_files))
chart_Series(pro_files,
theme=plot_theme, name="Cumulative Returns of S&P500 Mean-reverting Strategies")
legend("bottomleft", legend=colnames(pro_files),
inset=0.02, bg="white", cex=0.7, lwd=rep(6, NCOL(re_turns)),
col=plot_theme$col$line.col, bty="n")
source("C:/Develop/R/lecture_slides/scripts/back_test.R")
width_s <- seq(5, 50, by=5)
# perform sapply loop over lamb_das
pro_files <- sapply(width_s, backtest_rolling, re_turns=re_turns,
price_s=price_s, bid_offer=bid_offer, tre_nd=(-1))
colnames(pro_files) <- paste0("width=", width_s)
pro_files <- xts(pro_files, index(price_s))
plot_theme <- chart_theme()
plot_theme$col$line.col <-
colorRampPalette(c("blue", "red"))(NCOL(pro_files))
chart_Series(pro_files,
theme=plot_theme, name="Cumulative Returns of S&P500 Mean-reverting Strategies")
legend("bottomleft", legend=colnames(pro_files),
inset=0.02, bg="white", cex=0.7, lwd=rep(6, NCOL(re_turns)),
col=plot_theme$col$line.col, bty="n")
plot_theme <- chart_theme()
plot_theme$col$line.col <-
colorRampPalette(c("blue", "red"))(NCOL(pro_files))
chart_Series(pro_files,
theme=plot_theme, name="Cumulative Returns of S&P500 Mean-reverting Strategies")
legend("topleft", legend=colnames(pro_files),
inset=0.02, bg="white", cex=0.7, lwd=rep(6, NCOL(re_turns)),
col=plot_theme$col$line.col, bty="n")
plot_theme <- chart_theme()
plot_theme$col$line.col <-
colorRampPalette(c("blue", "red"))(NCOL(pro_files))
chart_Series(pro_files,
theme=plot_theme, name="Cumulative Returns of S&P500 Mean-reverting Strategies")
legend("topleft", legend=colnames(pro_files),
inset=0.05, bg="white", cex=0.7, lwd=rep(6, NCOL(re_turns)),
col=plot_theme$col$line.col, bty="n")
n_cols <- NCOL(price_s)
date_s <- index(price_s)
in_dex <- xts(rowSums(price_s)/n_cols, index(price_s))
colnames(in_dex) <- "index"
# define end_points
end_points <- rutils::calc_endpoints(price_s, inter_val="months")
end_points <- end_points[end_points>50]
n_rows <- NROW(end_points)
look_back <- 12
start_points <- c(rep_len(1, look_back-1), end_points[1:(n_rows-look_back+1)])
al_pha <- 0.01
max_eigen <- 3
strat_rets_arma <- HighFreq::roll_portf(re_turns,
re_turns,
start_points-1,
end_points-1,
al_pha=al_pha,
max_eigen=max_eigen)
tail(strat_rets_arma)
foo <- strat_rets_arma
ls()
returns_100 <- re_turns[, sample(NCOL(re_turns), s=100, replace=FALSE)]
save(price_s, re_turns, returns_100,
file="C:/Develop/R/lecture_slides/data/sp500_prices.RData")
# plot strategy
strat_rets_arma <- exp(cumsum(strat_rets_arma))
strat_rets_arma <- xts(strat_rets_arma, date_s)
strat_rets_arma <- cbind(strat_rets_arma, in_dex)
col_names <- c("Strategy", "Index")
colnames(strat_rets_arma) <- col_names
dygraphs::dygraph(strat_rets_arma, main=paste(col_names, collapse=" and ")) %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red") %>%
dySeries(name=col_names[2], axis="y2", col="blue")
strat_rets_arma <- foo
# plot strategy
strat_rets_arma <- cumsum(strat_rets_arma)
strat_rets_arma <- xts(strat_rets_arma, date_s)
strat_rets_arma <- cbind(strat_rets_arma, in_dex)
col_names <- c("Strategy", "Index")
colnames(strat_rets_arma) <- col_names
dygraphs::dygraph(strat_rets_arma, main=paste(col_names, collapse=" and ")) %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red") %>%
dySeries(name=col_names[2], axis="y2", col="blue")
tail(strat_rets_arma)
bar <- cumsum(strat_rets_arma)
tail(bar)
bar <- cumsum(foo)
bar <- cumsum(drop(foo))
tail(bar)
bar <- exp(cumsum(drop(foo)))
tail(bar)
NCOL(re_turns)
strat_rets_arma <- foo
# plot strategy
strat_rets_arma <- exp(cumsum(strat_rets_arma)/NCOL(re_turns))
tail(strat_rets_arma)
strat_rets_arma <- xts(strat_rets_arma, date_s)
strat_rets_arma <- cbind(strat_rets_arma, in_dex)
col_names <- c("Strategy", "Index")
colnames(strat_rets_arma) <- col_names
dygraphs::dygraph(strat_rets_arma, main=paste(col_names, collapse=" and ")) %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red") %>%
dySeries(name=col_names[2], axis="y2", col="blue")
strat_rets_arma <- foo
strat_rets_arma <- exp(cumsum(strat_rets_arma)/NCOL(re_turns))
strat_rets_arma <- xts(strat_rets_arma, date_s)
strat_rets_arma <- cbind(strat_rets_arma, in_dex)
col_names <- c("Strategy", "Index")
colnames(strat_rets_arma) <- col_names
dygraphs::dygraph(strat_rets_arma, main=paste(col_names, collapse=" and ")) %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red") %>%
dySeries(name=col_names[2], axis="y2", col="blue")
head(start_points, 22)
head(end_points, 22)
n_cols <- NCOL(price_s)
date_s <- index(price_s)
in_dex <- xts(rowSums(price_s)/n_cols, index(price_s))
colnames(in_dex) <- "index"
head(strat_rets_arma)
dygraphs::dygraph(strat_rets_arma[end_points], main=paste(col_names, collapse=" and ")) %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red") %>%
dySeries(name=col_names[2], axis="y2", col="blue")
dygraphs::dygraph(strat_rets_arma[end_points], main=paste(col_names, collapse=" and ")) %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red", strokeWidth=2) %>%
dySeries(name=col_names[2], axis="y2", col="blue", strokeWidth=2)
n_cols <- NCOL(price_s) ; date_s <- index(price_s)
in_dex <- xts(rowSums(price_s)/n_cols, index(price_s))
colnames(in_dex) <- "index"
n_cols <- NCOL(price_s) ; date_s <- index(price_s)
in_dex <- xts(rowSums(price_s)/n_cols, index(price_s))
colnames(in_dex) <- "index"
end_points <- rutils::calc_endpoints(price_s, inter_val="months")
end_points <- end_points[end_points > (n_cols+1)]
n_rows <- NROW(end_points)
look_back <- 12
start_points <- c(rep_len(1, look_back-1), end_points[1:(n_rows-look_back+1)])
# run backtest function
al_pha <- 0.01 ; max_eigen <- 3
strat_rets_arma <- HighFreq::roll_portf(ex_cess=re_turns,
re_turns=re_turns,
start_points=start_points-1,
end_points=end_points-1,
al_pha=al_pha,
max_eigen=max_eigen)
foo <- strat_rets_arma
pnl_s <- strat_rets_arma
rm(strat_rets_arma)
dim(pnl_s)
dim(price_s)
tail(pnl_s)
tail(foo)
pnl_s <- cumsum(pnl_s)
tail(pnl_s)
pnl_s <- xts(pnl_s, date_s)
pnl_s <- cbind(pnl_s, in_dex)
col_names <- c("Strategy", "Index")
colnames(pnl_s) <- col_names
dygraphs::dygraph(pnl_s[end_points], main=paste(col_names, collapse=" and ")) %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red", strokeWidth=2) %>%
dySeries(name=col_names[2], axis="y2", col="blue", strokeWidth=2)
pnl_s <- foo
pnl_s <- exp(cumsum(pnl_s))
tail(pnl_s)
pnl_s <- xts(pnl_s, date_s)
pnl_s <- cbind(pnl_s, in_dex)
col_names <- c("Strategy", "Index")
colnames(pnl_s) <- col_names
dygraphs::dygraph(pnl_s[end_points], main=paste(col_names, collapse=" and ")) %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red", strokeWidth=2) %>%
dySeries(name=col_names[2], axis="y2", col="blue", strokeWidth=2)
pnl_s <- foo
pnl_s <- exp(cumsum(pnl_s)/NCOL(re_turns))
pnl_s <- xts(pnl_s, date_s)
pnl_s <- cbind(pnl_s, in_dex)
col_names <- c("Strategy", "Index")
colnames(pnl_s) <- col_names
dygraphs::dygraph(pnl_s[end_points], main=paste(col_names, collapse=" and ")) %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red", strokeWidth=2) %>%
dySeries(name=col_names[2], axis="y2", col="blue", strokeWidth=2)
dygraphs::dygraph(pnl_s[end_points], main="Rolling Portfolio Optimization Strategy") %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red", strokeWidth=2) %>%
dySeries(name=col_names[2], axis="y2", col="blue", strokeWidth=2)
tail(in_dex)
pnl_s <- foo
tail(pnl_s)
# plot strategy
pnl_s <- cumsum(pnl_s)
tail(pnl_s)
tail(in_dex)
pnl_s <- foo
pnl_s <- cumsum(pnl_s)
pnl_s <- cbind(pnl_s, log(in_dex))
col_names <- c("Strategy", "Index")
colnames(pnl_s) <- col_names
dygraphs::dygraph(pnl_s[end_points], main="Rolling Portfolio Optimization Strategy") %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red", strokeWidth=2) %>%
dySeries(name=col_names[2], axis="y2", col="blue", strokeWidth=2)
ls()
pnl_s <- HighFreq::roll_portf(ex_cess=re_turns,
re_turns=re_turns,
start_points=start_points-1,
end_points=end_points-1,
al_pha=al_pha,
max_eigen=max_eigen)
tail(pnl_s)
tail(foo)
all.equal(pnl_s, foo)
getwd()
save(foo, "C:/Develop/data/foo.RData")
save(foo, file="C:/Develop/data/foo.RData")
library(HighFreq)
load("C:/Develop/R/lecture_slides/data/sp500_prices.RData")
n_cols <- NCOL(price_s) ; date_s <- index(price_s)
in_dex <- xts(rowSums(price_s)/n_cols, index(price_s))
colnames(in_dex) <- "index"
end_points <- rutils::calc_endpoints(price_s, inter_val="months")
end_points <- end_points[end_points > (n_cols+1)]
n_rows <- NROW(end_points)
look_back <- 12
start_points <- c(rep_len(1, look_back-1), end_points[1:(n_rows-look_back+1)])
# run backtest function
al_pha <- 0.01 ; max_eigen <- 3
pnl_s <- HighFreq::roll_portf(ex_cess=re_turns,
re_turns=re_turns,
start_points=start_points-1,
end_points=end_points-1,
al_pha=al_pha,
max_eigen=max_eigen)
load("C:/Develop/data/foo.RData")
all.equal(pnl_s, foo)
library(HighFreq)
pnl_s <- HighFreq::roll_portf(ex_cess=re_turns,
re_turns=re_turns,
start_points=start_points-1,
end_points=end_points-1,
al_pha=al_pha,
max_eigen=max_eigen)
all.equal(pnl_s, foo)
tail(pnl_s)
tail(foo)
foo <- pnl_s
# plot strategy
pnl_s <- exp(cumsum(pnl_s))
pnl_s <- cbind(pnl_s, in_dex)
col_names <- c("Strategy", "Index")
colnames(pnl_s) <- col_names
dygraphs::dygraph(pnl_s[end_points], main="Rolling Portfolio Optimization Strategy") %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red", strokeWidth=2) %>%
dySeries(name=col_names[2], axis="y2", col="blue", strokeWidth=2)
tail(pnl_s)
tail(foo)
pnl_s <- cbind(pnl_s, (pnl_s[, 1]+pnl_s[, 2])/2)
col_names <- c("Strategy", "Index", "Average")
colnames(pnl_s) <- col_names
colnames(pnl_s)
dygraphs::dygraph(pnl_s[end_points], main="Rolling Portfolio Optimization Strategy") %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red", strokeWidth=2) %>%
dySeries(name=col_names[2], axis="y2", col="blue", strokeWidth=2) %>%
dySeries(name=col_names[3], axis="y", col="green", strokeWidth=2)
dygraphs::dygraph(pnl_s[end_points], main="Rolling Portfolio Optimization Strategy") %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red", strokeWidth=2) %>%
dySeries(name=col_names[3], axis="y", col="green", strokeWidth=2) %>%
dySeries(name=col_names[2], axis="y2", col="blue", strokeWidth=2)
dygraphs::dygraph(pnl_s[end_points], main="Rolling Portfolio Optimization Strategy") %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red", strokeWidth=2) %>%
# dySeries(name=col_names[3], axis="y", col="green", strokeWidth=2) %>%
dySeries(name=col_names[2], axis="y2", col="blue", strokeWidth=2)
pnl_s <- foo
# Plot strategy
pnl_s <- exp(cumsum(pnl_s))
pnl_s <- cbind(pnl_s, (pnl_s[, 1]+pnl_s[, 2])/2)
pnl_s <- foo
# Plot strategy
pnl_s <- exp(cumsum(pnl_s))
pnl_s <- cbind(pnl_s, in_dex)
col_names <- c("Strategy", "Index"
)
colnames(pnl_s) <- col_names
dygraphs::dygraph(pnl_s[end_points], main="Rolling Portfolio Optimization Strategy") %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red", strokeWidth=2) %>%
# dySeries(name=col_names[3], axis="y", col="green", strokeWidth=2) %>%
dySeries(name=col_names[2], axis="y2", col="blue", strokeWidth=2)
pnl_s <- foo
# Plot strategy
pnl_s <- exp(cumsum(pnl_s))
pnl_s <- cbind(pnl_s, in_dex, (10*pnl_s+in_dex)/2)
col_names <- c("Strategy", "Index", "Average")
colnames(pnl_s) <- col_names
dygraphs::dygraph(pnl_s[end_points], main="Rolling Portfolio Optimization Strategy") %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red", strokeWidth=2) %>%
dySeries(name=col_names[3], axis="y", col="green", strokeWidth=2) %>%
dySeries(name=col_names[2], axis="y2", col="blue", strokeWidth=2)
dygraphs::dygraph(pnl_s[end_points], main="Rolling Portfolio Optimization Strategy") %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y2", col="red", strokeWidth=2) %>%
dySeries(name=col_names[3], axis="y", col="green", strokeWidth=2) %>%
dySeries(name=col_names[2], axis="y", col="blue", strokeWidth=2)
dygraphs::dygraph(pnl_s[end_points], main="Rolling Portfolio Optimization Strategy") %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y2", col="red", strokeWidth=1) %>%
dySeries(name=col_names[3], axis="y", col="green", strokeWidth=2) %>%
dySeries(name=col_names[2], axis="y", col="blue", strokeWidth=1)
col_names[1]
dygraphs::dygraph(pnl_s[end_points], main="Rolling Portfolio Optimization Strategy") %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red", strokeWidth=1) %>%
dySeries(name=col_names[3], axis="y2", col="green", strokeWidth=2) %>%
dySeries(name=col_names[2], axis="y2", col="blue", strokeWidth=1)
dygraphs::dygraph(pnl_s[end_points], main="Rolling Portfolio Optimization Strategy") %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red", strokeWidth=1) %>%
dySeries(name=col_names[2], axis="y2", col="blue", strokeWidth=1) %>%
dySeries(name=col_names[3], axis="y2", col="green", strokeWidth=2)
tail(foo)
pnl_s <- foo
# Plot strategy in log scale
pnl_s <- cumsum(pnl_s)
pnl_s <- cbind(pnl_s, log(in_dex), (10*pnl_s+log(in_dex))/2)
tail(foo)
tail(pnl_s)
pnl_s <- foo
pnl_s <- cumsum(pnl_s)
pnl_s <- cbind(pnl_s, log(in_dex), (pnl_s+log(in_dex))/2)
tail(pnl_s)
col_names <- c("Strategy", "Index", "Average")
colnames(pnl_s) <- col_names
dygraphs::dygraph(pnl_s[end_points], main="Rolling Portfolio Optimization Strategy") %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red", strokeWidth=1) %>%
dySeries(name=col_names[2], axis="y2", col="blue", strokeWidth=1) %>%
dySeries(name=col_names[3], axis="y2", col="green", strokeWidth=2)
head(in_dex)
log_index) <- log(in_dex/as.numeric(in_dex[1, ]))
log_index <- log(in_dex/as.numeric(in_dex[1, ]))
log_index <- log(in_dex/as.numeric(in_dex[1, ]))
pnl_s <- cbind(pnl_s, log_index, (pnl_s+log_index)/2)
col_names <- c("Strategy", "Index", "Average")
colnames(pnl_s) <- col_names
dygraphs::dygraph(pnl_s[end_points], main="Rolling Portfolio Optimization Strategy (log scale)") %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red", strokeWidth=1) %>%
dySeries(name=col_names[2], axis="y2", col="blue", strokeWidth=1) %>%
dySeries(name=col_names[3], axis="y2", col="green", strokeWidth=2)
tail(log_index)
# Plot strategy in log scale
pnl_s <- cumsum(pnl_s)
log_index <- log(in_dex/as.numeric(in_dex[1, ]))
head(log_index)
log_index <- log(in_dex/as.numeric(in_dex[1, ]))
pnl_s <- cbind(pnl_s, log_index, (pnl_s+log_index)/2)
pnl_s <- foo
pnl_s <- cumsum(pnl_s)
log_index <- log(in_dex/as.numeric(in_dex[1, ]))
pnl_s <- cbind(pnl_s, log_index, (pnl_s+log_index)/2)
col_names <- c("Strategy", "Index", "Average")
colnames(pnl_s) <- col_names
dygraphs::dygraph(pnl_s[end_points], main="Rolling Portfolio Optimization Strategy (log scale)") %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red", strokeWidth=1) %>%
dySeries(name=col_names[2], axis="y2", col="blue", strokeWidth=1) %>%
dySeries(name=col_names[3], axis="y2", col="green", strokeWidth=2)
head(log_index)
head(end_points)
log_index <- log(in_dex/as.numeric(in_dex[end_points[1], ]))
pnl_s <- foo
pnl_s <- cumsum(pnl_s)
log_index <- log(in_dex/as.numeric(in_dex[end_points[1], ]))
pnl_s <- cbind(pnl_s, log_index, (pnl_s+log_index)/2)
col_names <- c("Strategy", "Index", "Average")
colnames(pnl_s) <- col_names
dygraphs::dygraph(pnl_s[end_points], main="Rolling Portfolio Optimization Strategy (log scale)") %>%
dyAxis("y", label=col_names[1], independentTicks=TRUE) %>%
dyAxis("y2", label=col_names[2], independentTicks=TRUE) %>%
dySeries(name=col_names[1], axis="y", col="red", strokeWidth=1) %>%
dySeries(name=col_names[2], axis="y2", col="blue", strokeWidth=1) %>%
dySeries(name=col_names[3], axis="y2", col="green", strokeWidth=2)
