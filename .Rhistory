tail(blah)
length(blah)
6.5*6
blah <- seq(from=as.POSIXct("2015-02-09 09:30:00"), to=as.POSIXct("2015-02-09 16:00:00"), by="1 min")
length(blah)
in_dex <- seq(from=as.POSIXct("2015-02-09 09:30:00"), to=as.POSIXct("2015-02-09 16:00:00"), by="1 min")
x_ts <- xts(cumsum(rnorm(length(in_dex))), order.by=in_dex)
plot(x_ts)
bid_offer <- abs(rnorm(length(in_dex)))
head(bid_offer)
head(x_ts)
bid_offer <- abs(rnorm(length(in_dex)))/10
sym_bol <- "SPY"
data_dir <- "E:/mktdata/sec/"
Sys.setenv(TZ="America/New_York")  # Set the time-zone to GMT
setwd("C:/Develop/data")
options(digits.secs=6)
options(digits=5)
options(stringsAsFactors=FALSE)
options(max.print=80)
ls()
file.path(data_dir, "SPY9/2009.04.02.SPY9.rdata")
load(file.path(data_dir, "SPY9/2009.04.02.SPY9.rdata"))
ls()
load(file.path(data_dir, "SPY9/2014.05.02.SPY.RData"))
data_dir
load(file.path(data_dir, "SPY/2014.05.02.SPY.RData"))
ls()
head(SPY)
?sample
sample(x=10*(8:12), size=10)
sample(x=10*(8:12), size=10, replace=TRUE)
taq_data <- cbind(x_ts-bid_offer, x_ts+bid_offer)
taq_data <- cbind(taq_data, x_ts+rnorm(length(in_dex))/10)
taq_data <- cbind(taq_data, sample(x=10*(8:12), size=length(in_dex), replace=TRUE))
head(taq_data)
colnames(taq_data) <- c("Bid.Price", "Ask.Price", "Trade.Price", "Volume")
head(taq_data)
scrub_agg <- function(taq_data, vol_window=51, thresh_old=2) {
# convert time index to New_York
index(taq_data) <- with_tz(index(taq_data), "America/New_York")
# subset data to NYSE trading hours
taq_data <- taq_data['T09:30:00/T16:00:00', ]
# return NULL if no data
if (nrow(taq_data)==0)  return(NULL)
to_day <- as.Date(index(first(taq_data)))
# remove duplicate time stamps using 'duplicated'
taq_data <- taq_data[!duplicated(index(taq_data)), ]
# scrub quotes with suspect bid-offer spreads
bid_offer <- taq_data[, 'Ask.Price'] - taq_data[, 'Bid.Price']
#  bid_offer <- na.omit(bid_offer)
sus_pect <- extreme_values(bid_offer, vol_window=vol_window, thresh_old=thresh_old)
# remove suspect values
taq_data <- taq_data[!sus_pect]
# replace suspect values
# taq_data[sus_pect, "Bid.Price"] <- taq_data[sus_pect, "Trade.Price"]
# taq_data[sus_pect, "Ask.Price"] <- taq_data[sus_pect, "Trade.Price"]
# scrub quotes with suspect price jumps
# calculate mid prices
mid_prices <- 0.5 * (taq_data[, "Bid.Price"] + taq_data[, "Ask.Price"])
#  mid_prices <- na.omit(mid_prices)
colnames(mid_prices) <- "Mid.Price"
# replace suspect values with NA, and perform 'locf'
mid_prices[jump_values(mid_prices)] <- NA
mid_prices <- na.locf(mid_prices)
#  mid_prices <- na.locf(mid_prices, fromLast=TRUE)
# cbind mid_prices with volume data, and replace NA volumes with zero
mid_prices <- cbind(mid_prices, taq_data[index(mid_prices), "Volume"])
mid_prices[is.na(mid_prices[, "Volume"]), "Volume"] <- 0
# aggregate to OHLC minutes data and cumulative volume
mid_prices <- to.period(x=mid_prices, period="minutes")
# round up times to next minute
index(mid_prices) <- align.time(x=index(mid_prices), 60)
mid_prices
}  # end scrub_agg
ohlc_data <- scrub_agg(taq_data)
library(HighFreq)
ls()
ohlc_data <- scrub_agg(taq_data)
chartSeries(ohlc_data, name=sym_bol, theme=chartTheme("white"))
head(ohlc_data)
dim(ohlc_data)
dim(taq_data)
in_dex <- seq(from=as.POSIXct("2015-02-09 09:30:00"), to=as.POSIXct("2015-02-09 16:00:00"), by="1 sec")
x_ts <- xts(cumsum(rnorm(length(in_dex))), order.by=in_dex)
# create vector of random bid-offer prices
bid_offer <- abs(rnorm(length(in_dex)))/10
taq_data <- cbind(x_ts-bid_offer, x_ts+bid_offer)
taq_data <- cbind(taq_data, x_ts+rnorm(length(in_dex))/10)
taq_data <- cbind(taq_data, sample(x=10*(8:12), size=length(in_dex), replace=TRUE))
colnames(taq_data) <- c("Bid.Price", "Ask.Price", "Trade.Price", "Volume")
ohlc_data <- scrub_agg(taq_data)
chartSeries(ohlc_data, name=sym_bol, theme=chartTheme("white"))
taq_data <- cbind(x_ts-bid_offer, x_ts+bid_offer)
taq_data <- cbind(taq_data, x_ts+rnorm(length(in_dex))/10)
taq_data <- cbind(taq_data, sample(x=10*(2:18), size=length(in_dex), replace=TRUE))
colnames(taq_data) <- c("Bid.Price", "Ask.Price", "Trade.Price", "Volume")
ohlc_data <- scrub_agg(taq_data)
chartSeries(ohlc_data, name=sym_bol, theme=chartTheme("white"))
library(HighFreq)
ls()
dim(taq_data)
scrub_agg <- function(taq_data, vol_window=51, thresh_old=2, period="minutes") {
# convert time index to New_York
index(taq_data) <- with_tz(index(taq_data), "America/New_York")
# subset data to NYSE trading hours
taq_data <- taq_data['T09:30:00/T16:00:00', ]
# return NULL if no data
if (nrow(taq_data)==0)  return(NULL)
to_day <- as.Date(index(first(taq_data)))
# remove duplicate time stamps using 'duplicated'
taq_data <- taq_data[!duplicated(index(taq_data)), ]
# scrub quotes with suspect bid-offer spreads
bid_offer <- taq_data[, 'Ask.Price'] - taq_data[, 'Bid.Price']
#  bid_offer <- na.omit(bid_offer)
sus_pect <- extreme_values(bid_offer, vol_window=vol_window, thresh_old=thresh_old)
# remove suspect values
taq_data <- taq_data[!sus_pect]
# replace suspect values
# taq_data[sus_pect, "Bid.Price"] <- taq_data[sus_pect, "Trade.Price"]
# taq_data[sus_pect, "Ask.Price"] <- taq_data[sus_pect, "Trade.Price"]
# scrub quotes with suspect price jumps
# calculate mid prices
mid_prices <- 0.5 * (taq_data[, "Bid.Price"] + taq_data[, "Ask.Price"])
#  mid_prices <- na.omit(mid_prices)
colnames(mid_prices) <- "Mid.Price"
# replace suspect values with NA, and perform 'locf'
mid_prices[jump_values(mid_prices)] <- NA
mid_prices <- na.locf(mid_prices)
#  mid_prices <- na.locf(mid_prices, fromLast=TRUE)
# cbind mid_prices with volume data, and replace NA volumes with zero
mid_prices <- cbind(mid_prices, taq_data[index(mid_prices), "Volume"])
mid_prices[is.na(mid_prices[, "Volume"]), "Volume"] <- 0
# aggregate to OHLC and cumulative volume data
mid_prices <- to.period(x=mid_prices, period=period)
# round up times to next period
index(mid_prices) <- align.time(x=index(mid_prices), 60)
mid_prices
}  # end scrub_agg
ohlc_data <- scrub_agg(taq_data, period="10 minutes")
?to.period
?endpoints
?switch
switch_test <- function(var.input, op_tion="one") {
switch(op_tion,
one=paste("first", var.input),
two=paste("second", var.input))
}  # end switch_test
switch_test <- function(in_put, op_tion="one") {
switch(op_tion,
one=paste("first", in_put),
two=paste("second", in_put))
}  # end switch_test
switch_test("hello")
switch_test <- function(in_put, op_tion="one") {
switch(op_tion,
one=paste("first option", in_put),
two=paste("second option", in_put))
}  # end switch_test
switch_test("hello")
switch_test <- function(in_put, op_tion="one") {
switch(op_tion,
one=paste("first option:", in_put),
two=paste("second option:", in_put))
}  # end switch_test
switch_test(in_put"hello", op_tion="two")
switch_test(in_put="hello", op_tion="two")
switch_test <- function(in_put, op_tion="one") {
switch(op_tion,
one=paste("first option:", in_put),
two=paste("second option:", in_put),
"1 min"=paste("second option:", in_put)
)  # end switch
}  # end switch_test
switch_test(in_put="hello", op_tion="1 min")
switch_test <- function(in_put, op_tion="one") {
switch(op_tion,
one=paste("first option:", in_put),
two=paste("second option:", in_put),
"1 min"=paste("1 min option:", in_put)
)  # end switch
}  # end switch_test
switch_test(in_put="hello", op_tion="1 min")
switch_test <- function(in_put, op_tion="one") {
switch(op_tion,
one=paste("first option:", in_put),
two=paste("second option:", in_put),
"1 min"=paste("1 min option:", in_put),
paste("something else:", in_put)
)  # end switch
}  # end switch_test
switch_test("hello")
switch_test(in_put="hello", op_tion="1 min")
switch_test(in_put="hello", op_tion="blah")
?align.time
scrub_agg <- function(taq_data, vol_window=51, thresh_old=2, period="minutes") {
# convert time index to New_York
index(taq_data) <- with_tz(index(taq_data), "America/New_York")
# subset data to NYSE trading hours
taq_data <- taq_data['T09:30:00/T16:00:00', ]
# return NULL if no data
if (nrow(taq_data)==0)  return(NULL)
to_day <- as.Date(index(first(taq_data)))
# remove duplicate time stamps using 'duplicated'
taq_data <- taq_data[!duplicated(index(taq_data)), ]
# scrub quotes with suspect bid-offer spreads
bid_offer <- taq_data[, 'Ask.Price'] - taq_data[, 'Bid.Price']
#  bid_offer <- na.omit(bid_offer)
sus_pect <- extreme_values(bid_offer, vol_window=vol_window, thresh_old=thresh_old)
# remove suspect values
taq_data <- taq_data[!sus_pect]
# replace suspect values
# taq_data[sus_pect, "Bid.Price"] <- taq_data[sus_pect, "Trade.Price"]
# taq_data[sus_pect, "Ask.Price"] <- taq_data[sus_pect, "Trade.Price"]
# scrub quotes with suspect price jumps
# calculate mid prices
mid_prices <- 0.5 * (taq_data[, "Bid.Price"] + taq_data[, "Ask.Price"])
#  mid_prices <- na.omit(mid_prices)
colnames(mid_prices) <- "Mid.Price"
# replace suspect values with NA, and perform 'locf'
mid_prices[jump_values(mid_prices)] <- NA
mid_prices <- na.locf(mid_prices)
#  mid_prices <- na.locf(mid_prices, fromLast=TRUE)
# cbind mid_prices with volume data, and replace NA volumes with zero
mid_prices <- cbind(mid_prices, taq_data[index(mid_prices), "Volume"])
mid_prices[is.na(mid_prices[, "Volume"]), "Volume"] <- 0
# aggregate to OHLC and cumulative volume data
mid_prices <- switch(period,
"minutes"={sec_onds=60, to.period(x=mid_prices, period=period)},
"3 min"={sec_onds=3*60, to.minutes3(x=mid_prices)},
"5 min"={sec_onds=5*60, to.minutes5(x=mid_prices)},
"10 min"={sec_onds=10*60, to.minutes10(x=mid_prices)},
"15 min"={sec_onds=15*60, to.minutes15(x=mid_prices)},
"30 min"={sec_onds=30*60, to.minutes30(x=mid_prices)},
"hours"={sec_onds=60*60, to.period(x=mid_prices, period=period)}
)  # end switch
# round up times to next period
index(mid_prices) <- align.time(x=index(mid_prices), n=sec_onds)
mid_prices
}  # end scrub_agg
scrub_agg <- function(taq_data, vol_window=51, thresh_old=2, period="minutes") {
# convert time index to New_York
index(taq_data) <- with_tz(index(taq_data), "America/New_York")
# subset data to NYSE trading hours
taq_data <- taq_data['T09:30:00/T16:00:00', ]
# return NULL if no data
if (nrow(taq_data)==0)  return(NULL)
to_day <- as.Date(index(first(taq_data)))
# remove duplicate time stamps using 'duplicated'
taq_data <- taq_data[!duplicated(index(taq_data)), ]
# scrub quotes with suspect bid-offer spreads
bid_offer <- taq_data[, 'Ask.Price'] - taq_data[, 'Bid.Price']
#  bid_offer <- na.omit(bid_offer)
sus_pect <- extreme_values(bid_offer, vol_window=vol_window, thresh_old=thresh_old)
# remove suspect values
taq_data <- taq_data[!sus_pect]
# replace suspect values
# taq_data[sus_pect, "Bid.Price"] <- taq_data[sus_pect, "Trade.Price"]
# taq_data[sus_pect, "Ask.Price"] <- taq_data[sus_pect, "Trade.Price"]
# scrub quotes with suspect price jumps
# calculate mid prices
mid_prices <- 0.5 * (taq_data[, "Bid.Price"] + taq_data[, "Ask.Price"])
#  mid_prices <- na.omit(mid_prices)
colnames(mid_prices) <- "Mid.Price"
# replace suspect values with NA, and perform 'locf'
mid_prices[jump_values(mid_prices)] <- NA
mid_prices <- na.locf(mid_prices)
#  mid_prices <- na.locf(mid_prices, fromLast=TRUE)
# cbind mid_prices with volume data, and replace NA volumes with zero
mid_prices <- cbind(mid_prices, taq_data[index(mid_prices), "Volume"])
mid_prices[is.na(mid_prices[, "Volume"]), "Volume"] <- 0
# aggregate to OHLC and cumulative volume data
mid_prices <- switch(period,
"minutes"={sec_onds <- 60; to.period(x=mid_prices, period=period)},
"3 min"={sec_onds <- 3*60; to.minutes3(x=mid_prices)},
"5 min"={sec_onds <- 5*60; to.minutes5(x=mid_prices)},
"10 min"={sec_onds <- 10*60; to.minutes10(x=mid_prices)},
"15 min"={sec_onds <- 15*60; to.minutes15(x=mid_prices)},
"30 min"={sec_onds <- 30*60; to.minutes30(x=mid_prices)},
"hours"={sec_onds <- 60*60; to.period(x=mid_prices, period=period)}
)  # end switch
# round up times to next period
index(mid_prices) <- align.time(x=index(mid_prices), n=sec_onds)
mid_prices
}  # end scrub_agg
ohlc_data <- scrub_agg(taq_data, period="10 minutes")
ohlc_data <- scrub_agg(taq_data)
dim(ohlc_data)
head(ohlc_data)
ohlc_data <- scrub_agg(taq_data, period="10 min")
head(ohlc_data)
chartSeries(ohlc_data, name=sym_bol, theme=chartTheme("white"))
ohlc_data <- scrub_agg(taq_data)
chartSeries(ohlc_data, name=sym_bol, theme=chartTheme("white"))
library(HighFreq)
library(HighFreq)
getwd()
save_OHLC("SPY")
save_OHLC("SPY")
ls()
rm(SPY)
load(file="SPY.RData")  # big file
sym_bol
chartSeries(SPY["2013"], name=sym_bol, theme=chartTheme("white"))
chartSeries(SPY["2013-05"], name=sym_bol, theme=chartTheme("white"))
library(HighFreq)
sym_bol <- "SPY"
paste0(sym_bol, "/2014.05.02.", sym_bol, ".RData")
load(file.path(data_dir, paste0(sym_bol, "/2014.05.02.", sym_bol, ".RData")))
head(SPY)
ls()
rm(SPY)
load(file=paste0(sym_bol, ".RData"))
ls()
chartSeries(SPY["2013-05"], name=sym_bol, theme=chartTheme("white"))
head(sym_bol)
head("sym_bol")
ls()
head(get(sym_bol))
library(HighFreq)
library(HighFreq)
?HighFreq
library(HighFreq)
library(HighFreq)
library(HighFreq)
library(HighFreq)
library(HighFreq)
library(HighFreq)
library(HighFreq)
library(HighFreq)
library(HighFreq)
library(HighFreq)
library(HighFreq)
library(highfrequency)
?tradesCleanup
tradesCleanup
?.check_data
library(HighFreq)
ls()
library(HighFreq)
Sys.setenv(TZ="America/New_York")  # Set the time-zone to GMT
setwd("C:/Develop/data")
options(digits.secs=6)
options(digits=5)
options(stringsAsFactors=FALSE)
options(max.print=80)
data_dir <- "E:/mktdata/sec/"
output_dir <- "E:/output/data/"
sym_bol <- "SPY"
load(file.path(data_dir, paste0(sym_bol, "/2014.05.02.", sym_bol, ".RData")))
scrub_data <- scrub_agg(taq_data=get(sym_bol))
chartSeries(scrub_data, name=sym_bol, theme=chartTheme("white"))
file_dir <- file.path(data_dir, sym_bol)
file_list <- list.files(file_dir)
file_names <- file.path(file_dir, file_list)
taq_data <- sapply(tail(file_names), function(file_name) {
cat("loading", file_name, "\n")
data_name <- load(file_name)
get(data_name)
})
length(taq_data)
taq_data <- lapply(taq_data, scrub_agg)
taq_data <- do_call_rbind(taq_data)
colnames(taq_data) <- sapply(strsplit(colnames(taq_data), split="[.]"),
function(strng) paste(sym_bol, strng[-1], sep="."))
chartSeries(taq_data, name=sym_bol, theme=chartTheme("white"))
scrub_agg <- function(taq_data, vol_window=51, thresh_old=2, period="minutes") {
cat("start scrub_agg\n")
# convert timezone of index to New_York
index(taq_data) <- with_tz(time=index(taq_data), tzone="America/New_York")
# subset data to NYSE trading hours
taq_data <- taq_data['T09:30:00/T16:00:00', ]
# return NULL if no data
if (nrow(taq_data)==0)  return(NULL)
to_day <- as.Date(index(first(taq_data)))
# remove duplicate time stamps using 'duplicated'
taq_data <- taq_data[!duplicated(index(taq_data)), ]
# scrub quotes with suspect bid-offer spreads
bid_offer <- taq_data[, "Ask.Price"] - taq_data[, "Bid.Price"]
#  bid_offer <- na.omit(bid_offer)
sus_pect <- extreme_values(bid_offer, vol_window=vol_window, thresh_old=thresh_old)
# remove suspect values
taq_data <- taq_data[!sus_pect]
cat("dim taq_data:", dim(taq_data), "\n")
# replace suspect values
# taq_data[sus_pect, "Bid.Price"] <- taq_data[sus_pect, "Trade.Price"]
# taq_data[sus_pect, "Ask.Price"] <- taq_data[sus_pect, "Trade.Price"]
# scrub quotes with suspect price jumps
# calculate mid prices
mid_prices <- 0.5 * (taq_data[, "Bid.Price"] + taq_data[, "Ask.Price"])
#  mid_prices <- na.omit(mid_prices)
colnames(mid_prices) <- "Mid.Price"
# replace suspect values with NA, and perform 'locf'
mid_prices[jump_values(mid_prices)] <- NA
mid_prices <- na.locf(mid_prices)
#  mid_prices <- na.locf(mid_prices, fromLast=TRUE)
# cbind mid_prices with volume data, and replace NA volumes with zero
mid_prices <- cbind(mid_prices, taq_data[index(mid_prices), "Volume"])
mid_prices[is.na(mid_prices[, "Volume"]), "Volume"] <- 0
cat("length mid_prices:", length(mid_prices), "\n")
# aggregate to OHLC and cumulative volume data
mid_prices <- switch(period,
"minutes"={sec_onds <- 60; to.period(x=mid_prices, period=period)},
"3 min"={sec_onds <- 3*60; to.minutes3(x=mid_prices)},
"5 min"={sec_onds <- 5*60; to.minutes5(x=mid_prices)},
"10 min"={sec_onds <- 10*60; to.minutes10(x=mid_prices)},
"15 min"={sec_onds <- 15*60; to.minutes15(x=mid_prices)},
"30 min"={sec_onds <- 30*60; to.minutes30(x=mid_prices)},
"hours"={sec_onds <- 60*60; to.period(x=mid_prices, period=period)}
)  # end switch
# round up times to next period
index(mid_prices) <- align.time(x=index(mid_prices), n=sec_onds)
cat("dim mid_prices:", dim(mid_prices), "\n")
mid_prices
}  # end scrub_agg
save_OHLC <- function(sym_bol,
data_dir="E:/mktdata/sec/",
output_dir="E:/output/data/",
period="minutes") {
cat("start save_OHLC\n")
# create path to directory containing *.RData files
file_dir <- file.path(data_dir, sym_bol)
# get list of *.RData files
file_list <- list.files(file_dir)
# create paths to *.RData files
file_names <- file.path(file_dir, file_list)
cat("load data\n")
# load data into list
taq_data <- sapply(tail(file_names), function(file_name) {
cat("loading", sym_bol, "frome file: ", file_name, "\n")
data_name <- load(file_name)
get(data_name)
})
# scrub and aggregate the data
cat("scrub and aggregate\n")
taq_data <- sapply(taq_data, scrub_agg)
# recursively "rbind" the list into a single xts
cat("rbind\n")
taq_data <- do_call_rbind(taq_data)
# assign proper column names
colnames(taq_data) <- sapply(strsplit(colnames(taq_data), split="[.]"),
function(strng) paste(sym_bol, strng[-1], sep="."))
# copy the xts data to a variable with the name 'sym_bol'
cat("copy by assign\n")
assign(sym_bol, taq_data)
# save the xts data to a file in the output_dir
cat("save\n")
save(list=eval(sym_bol), file=file.path(output_dir, paste0(sym_bol, ".RData")))
}  # end save_OHLC
save_OHLC(sym_bol, data_dir=data_dir)
library(HighFreq)
library(HighFreq)
Sys.setenv(TZ="America/New_York")  # Set the time-zone to GMT
setwd("C:/Develop/data")
options(digits.secs=6)
options(digits=5)
options(stringsAsFactors=FALSE)
options(max.print=80)
data_dir <- "E:/mktdata/sec/"
output_dir <- "E:/output/data/"
sym_bol <- "SPY"
save_OHLC(sym_bol, data_dir=data_dir, period="15 min")
ls()
load(file.path(output_dir, paste0(sym_bol, ".RData")))
ls()
chartSeries(get(sym_bol), name=sym_bol, theme=chartTheme("white"))
load(file.path(data_dir, paste0(sym_bol, "/2014.05.02.", sym_bol, ".RData")))
scrub_data <- scrub_agg(taq_data=get(sym_bol))
head(scrub_data)
library(HighFreq)
library(HighFreq)
ls()
chartSeries(scrub_data, name=sym_bol, theme=chartTheme("white"))
colnames(scrub_data)
colnames(scrub_data) <- sapply(strsplit(colnames(scrub_data), split="[.]"),
function(strng) paste(sym_bol, strng[-1], sep="."))
colnames(scrub_data)
strsplit(colnames(scrub_data), split="[.]")
load(file.path(data_dir, paste0(sym_bol, "/2014.05.02.", sym_bol, ".RData")))
strsplit(colnames(scrub_data), split="[.]")
scrub_data <- scrub_agg(taq_data=get(sym_bol))
strsplit(colnames(scrub_data), split="[.]")
class(strsplit(colnames(scrub_data), split="[.]"))
colnames(scrub_data) <- lapply(strsplit(colnames(scrub_data), split="[.]"),
function(strng) paste(sym_bol, strng[-1], sep="."))
strsplit(colnames(scrub_data), split="[.]")
ls()
rm(scrub_data)
ts_data <- scrub_agg(taq_data=get(sym_bol))
ts_data <- quantmod.OHLC(ts_data)
ts_data <- as.quantmod.OHLC(ts_data)
ts_data <- scrub_agg(taq_data=get(sym_bol))
colnames(ts_data)
as.quantmod.OHLC
quantmod:::as.quantmod.OHLC
as.quantmod.OHLC.quantmod
as.quantmod.OHLC.xts
quantmod:::as.quantmod.OHLC.quantmod
quantmod:::as.quantmod.OHLC
quantmod:::as.quantmod
methods(as.quantmod.OHLC)
as.quantmod.OHLC.zoo
quantmod:::as.quantmod.OHLC.zoo
ts_data <- scrub_agg(taq_data=get(sym_bol))
ts_data <- as.quantmod.OHLC(x=ts_data, col.names=c("Open", "High", "Low", "Close", "Volume"))
is.quantmod.OHLC(ts_data)
is.OHLC(ts_data)
head(ts_data)
library(HighFreq)
ls()
as.quantmod.OHLC
methods(as.quantmod.OHLC)
