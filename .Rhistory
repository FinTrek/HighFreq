dim(foo)
agg_regate <- function(x_ts)  c(mean(x_ts[, 1]), mean(x_ts[, 4]))
bar <- HighFreq::roll_apply(price_s, mo_ment=agg_regate, win_dow=win_dow)
foo <- xts:::rollapply.xts(price_s, FUN=agg_regate, width=win_dow, align="right", by.column = FALSE)
tail(bar)
tail(foo)
summary(microbenchmark(
roll_apply=HighFreq::roll_apply(price_s, mo_ment=agg_regate, win_dow=win_dow),
rollapply=xts:::rollapply.xts(price_s, FUN=agg_regate, width=win_dow, align="right", by.column = FALSE),
times=10))[, c(1, 4, 5)]
library(HighFreq)
agg_regate
bar <- HighFreq::roll_apply(price_s, agg_fun=agg_regate, win_dow=win_dow)
foo <- xts:::rollapply.xts(price_s, FUN=agg_regate, width=win_dow, align="right", by.column=FALSE)
tail(foo)
tail(bar)
bar <- HighFreq::roll_apply(price_s, agg_fun=mean, win_dow=win_dow, by_columns=TRUE)
debug(roll_apply)
bar <- HighFreq::roll_apply(price_s, agg_fun=mean, win_dow=win_dow, by_columns=TRUE)
dim(agg_regations)
tail(agg_regations)
len_gth
undebug(roll_apply)
library(HighFreq)
library(HighFreq)
agg_regate
foo <- xts:::rollapply.xts(price_s, FUN=agg_regate, width=win_dow, align="right", by.column=FALSE)
bar <- HighFreq::roll_apply(price_s, agg_fun=agg_regate, win_dow=win_dow)
debug(roll_apply)
bar <- HighFreq::roll_apply(price_s, agg_fun=agg_regate, win_dow=win_dow)
dim(agg_regations)
is.vector(agg_regations)
agg_regations[1:3, 1:3]
agg_regations[1:2, 1:2]
agg_regations[1:2, 1:5]
undebug(roll_apply)
bar <- HighFreq::roll_apply(price_s, agg_fun=mean, win_dow=win_dow, by_columns=TRUE)
tail(bar)
foo <- xts:::rollapply.xts(price_s, FUN=mean, width=win_dow, align="right")
tail(foo)
library(HighFreq)
library(HighFreq)
foo <- xts:::rollapply.xts(price_s, FUN=mean, width=win_dow, align="right")
tail(foo)
bar <- HighFreq::roll_apply(price_s, agg_fun=mean, win_dow=win_dow, by_columns=TRUE)
tail(bar)
agg_regate
foo <- xts:::rollapply.xts(price_s, FUN=agg_regate, width=win_dow, align="right", by.column=FALSE)
bar <- HighFreq::roll_apply(price_s, agg_fun=agg_regate, win_dow=win_dow)
tail(foo)
tail(bar)
head(bar)
head(foo)
summary(microbenchmark(
roll_apply=HighFreq::roll_apply(price_s, agg_fun=sum, win_dow=win_dow),
rollapply=xts:::rollapply.xts(price_s, FUN=sum, width=win_dow, align="right"),
apply.rolling=apply.rolling(price_s, FUN=sum, width=win_dow),
times=10))[, c(1, 4, 5)]
foo <- HighFreq::roll_apply(price_s, agg_fun=sum, win_dow=win_dow)
bar <- xts:::rollapply.xts(price_s, FUN=sum, width=win_dow, align="right")
bar <- apply.rolling(price_s, FUN=sum, width=win_dow)
summary(microbenchmark(
roll_apply=HighFreq::roll_apply(price_s, agg_fun=sum, win_dow=win_dow),
rollapply=xts:::rollapply.xts(price_s, FUN=sum, width=win_dow, align="right"),
apply.rolling=apply.rolling(price_s, FUN=sum, width=win_dow),
times=10))[, c(1, 4, 5)]
foo <- HighFreq::roll_apply(price_s, agg_fun=sum, win_dow=win_dow)
bar <- xts:::rollapply.xts(price_s, FUN=sum, width=win_dow, align="right")
summary(microbenchmark(
roll_apply=HighFreq::roll_apply(price_s, agg_fun=sum, win_dow=win_dow, by_columns=TRUE),
rollapply=xts:::rollapply.xts(price_s, FUN=sum, width=win_dow, align="right"),
apply.rolling=apply.rolling(price_s, FUN=sum, width=win_dow),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
roll_apply=HighFreq::roll_apply(price_s, agg_fun=agg_regate, win_dow=win_dow),
rollapply=xts:::rollapply.xts(price_s, FUN=agg_regate, width=win_dow, align="right", by.column=FALSE),
times=10))[, c(1, 4, 5)]
rep_len(1, 0)
c(rep_len(1, 0), 3:1)
roll_apply
library(HighFreq)
library(HighFreq)
agg_regate
foo <- xts:::rollapply.xts(price_s, FUN=agg_regate, width=win_dow, align="right", by.column=FALSE)
foo <- xts:::rollapply.xts(SPY, FUN=agg_regate, width=win_dow, align="right", by.column=FALSE)
foo <- xts:::rollapply.xts(price_s, FUN=agg_regate, width=win_dow, align="right", by.column=FALSE)
bar <- HighFreq::roll_apply(price_s, agg_fun=agg_regate, win_dow=win_dow)
tail(foo)
tail(bar)
foo <- xts:::rollapply.xts(price_s, FUN=sum, width=win_dow, align="right")
bar <- HighFreq::roll_apply(price_s, agg_fun=sum, win_dow=win_dow, by_columns=TRUE)
tail(foo)
tail(bar)
end_points <- rutils::end_points(price_s, inter_val=10)
end_points
bar <- HighFreq::roll_apply(price_s, agg_fun=agg_regate, win_dow=2, end_points=end_points)
bar
end_points <- rutils::end_points(price_s, inter_val=win_dow)
bar <- HighFreq::roll_apply(price_s, agg_fun=sum, win_dow=2, end_points=end_points)
bar
foo <- PerformanceAnalytics::apply.rolling(price_s, FUN=sum, width=win_dow, align="right")
foo <- PerformanceAnalytics::apply.rolling(price_s, FUN="sum", width=win_dow, align="right")
foo <- PerformanceAnalytics::apply.rolling(price_s, FUN=sum, width=win_dow)
warnings()
bar <- HighFreq::roll_apply(price_s[, 1], agg_fun=sum, win_dow=2, end_points=end_points)
bar
foo <- PerformanceAnalytics::apply.rolling(price_s[, 1], FUN=sum, width=win_dow)
foo
foo <- xts::period.apply(price_s, FUN=sum, INDEX=end_points)
foo
bar <- HighFreq::roll_apply(price_s, agg_fun=sum, win_dow=2, end_points=end_points)
bar
foo <- xts::period.apply(price_s[, 1], FUN=sum, INDEX=end_points)
bar <- HighFreq::roll_apply(price_s[, 1], agg_fun=sum, win_dow=2, end_points=end_points)
tail(foo, 14)
tail(bar, 14)
bar <- HighFreq::roll_apply(price_s[, 1], agg_fun=sum, win_dow=1, end_points=end_points)
tail(bar, 14)
tail(price_s[, 1], 14)
(1:11)[0:1]
(1:11)[0:2]
(1:11)[0:0]
library(HighFreq)
library(HighFreq)
foo <- xts:::rollapply.xts(price_s, FUN=agg_regate, width=win_dow, align="right", by.column=FALSE)
bar <- HighFreq::roll_apply(price_s, agg_fun=agg_regate, win_dow=win_dow)
debug(roll_apply)
bar <- HighFreq::roll_apply(price_s, agg_fun=agg_regate, win_dow=win_dow)
head(start_points, 14)
win_dow
head(end_points, 14)
start_points <-  end_points[c(rep_len(0, win_dow-1), 1:(len_gth-win_dow+1))]
head(start_points, 14)
rep_len(0, win_dow-1)
undebug(roll_apply)
library(HighFreq)
library(HighFreq)
price_s <- SPY["2012-02-13", 1]
win_dow <- 11
agg_regate <- function(x_ts)  c(max(x_ts[, 1]), min(x_ts[, 4]))
agg_regate(price_s)
price_s <- SPY["2012-02-13"]
agg_regate(price_s)
foo <- xts:::rollapply.xts(price_s, FUN=sum, width=win_dow, align="right")
bar <- HighFreq::roll_apply(price_s, agg_fun=sum, win_dow=win_dow, by_columns=TRUE)
tail(foo, 14)
tail(bar, 14)
foo <- xts:::rollapply.xts(price_s, FUN=agg_regate, width=win_dow, align="right", by.column=FALSE)
bar <- HighFreq::roll_apply(price_s, agg_fun=agg_regate, win_dow=win_dow)
tail(foo, 14)
tail(bar, 14)
end_points <- rutils::end_points(price_s, inter_val=win_dow)
foo <- xts::period.apply(price_s[, 1], FUN=sum, INDEX=end_points)
bar <- HighFreq::roll_apply(price_s[, 1], agg_fun=sum, win_dow=2, end_points=end_points)
tail(foo, 14)
tail(bar, 14)
oh_lc <- price_s[, 1]
len_gth
len_gth <- length(end_points)
len_gth
start_points <-  end_points[c(rep_len(1, win_dow-1), (NROW(oh_lc) > (len_gth+1)) + 1:(len_gth-win_dow+1))]
start_points
end_points
NROW(oh_lc) > (len_gth+1)
(NROW(oh_lc) > (len_gth+1)) + 1:(len_gth-win_dow+1)
len_gth
start_points <-  end_points[c(rep_len(1, win_dow-1), (NROW(oh_lc) > (len_gth+1)) + 1:(len_gth-win_dow+1))]
start_points
end_points
start_points <-  end_points[c(rep_len(1, win_dow-1), 1:(len_gth-win_dow+1))] +
(NROW(oh_lc) > (len_gth+1))
start_points
library(HighFreq)
foo <- xts::period.apply(price_s[, 1], FUN=sum, INDEX=end_points)
bar <- HighFreq::roll_apply(price_s[, 1], agg_fun=sum, win_dow=2, end_points=end_points)
tail(foo, 14)
tail(bar, 14)
head(foo, 14)
head(bar, 14)
foo <- xts::period.apply(price_s[, 1], FUN=agg_regate, INDEX=end_points)
bar <- HighFreq::roll_apply(price_s[, 1], agg_fun=agg_regate, win_dow=2, end_points=end_points)
foo <- xts::period.apply(price_s, FUN=agg_regate, INDEX=end_points)
bar <- HighFreq::roll_apply(price_s, agg_fun=agg_regate, win_dow=2, end_points=end_points)
tail(foo, 14)
tail(bar, 14)
head(foo, 14)
head(bar, 14)
bar <- roll_apply(price_s[, 1], agg_fun=sum, win_dow=2, end_points=end_points, by_columns=TRUE)
tail(bar, 14)
bar <- roll_apply(price_s, agg_fun=sum, win_dow=2, end_points=end_points, by_columns=TRUE)
tail(bar, 14)
library(HighFreq)
library(HighFreq)
system("R CMD Rd2pdf C:/Develop/R/HighFreq")
rm(agg_regate)
library(HighFreq)
system("R CMD Rd2pdf C:/Develop/R/HighFreq")
library(HighFreq)
library(HighFreq)
SPY_design <- Vo(SPY)
re_turns <- calc_rets(x_ts=get(sym_bol))
SPY_design <- cbind(SPY_design, re_turns[, 1])
win_dow <- 5
rolling_volume <- rutils::roll_sum(Vo(SPY), win_dow=win_dow)
rolling_returns <- rutils::roll_sum(Vo(SPY)*re_turns, win_dow=win_dow)
dim(re_turns)
rolling_returns <- rutils::roll_sum(Vo(SPY)*re_turns[, 1], win_dow=win_dow)
rolling_returns <- ifelse(rolling_volume==0, 0.0, rolling_returns/rolling_volume)
foo <- v_wap(oh_lc=SPY, x_ts=re_turns[, 1], win_dow=win_dow)
identical(rolling_returns, foo)
head(rolling_returns, foo)
head(cbind(rolling_returns, foo))
tail(cbind(rolling_returns, foo))
head(re_turns)
?re_turns
paste0(rutils::na_me(SPY), ".VWAP")
paste0(rutils::na_me(re_turns[, 1]), ".VWAP")
library(HighFreq)
library(HighFreq)
library(HighFreq)
library(HighFreq)
library(HighFreq)
re_turns <- calc_returns(x_ts=get(sym_bol)[inter_val])
re_turns <- calc_returns(x_ts=get(sym_bol))
rolling_volume <- rutils::roll_sum(Vo(SPY), win_dow=win_dow)
rolling_returns <- rutils::roll_sum(Vo(SPY)*re_turns, win_dow=win_dow)
rolling_returns <- ifelse(rolling_volume==0, 0.0, rolling_returns/rolling_volume)
foo <- v_wap(oh_lc=SPY, x_ts=re_turns, win_dow=win_dow)
head(re_turns)
head(cbind(rolling_returns, foo))
tail(cbind(rolling_returns, foo))
library(HighFreq)
rutils::na_me(re_turns)
colnames(re_turns)
head(rolling_returns)
colnames(rolling_returns)
head(SPY_design)
SPY_design <- cbind(SPY_design, rolling_returns)
colnames(SPY_design)
win_dow
colnames(SPY_design) <- c("Volume", "returns", "returns.WA5")
colnames(SPY_design)
running_var <- vari_ance(oh_lc=SPY, calc_method="rogers.satchell")
rolling_var <- v_wap(oh_lc=SPY, x_ts=running_var, win_dow=win_dow)
head(running_var)
head(rolling_var)
colnames(running_var) <- "variance"
colnames(SPY_design)
colnames(rolling_var) <- "variance.WA5"
SPY_design <- cbind(SPY_design, running_var, rolling_var)
colnames(SPY_design)
skew_running <- skew_ohlc(oh_lc=SPY)
skew_rolling <- v_wap(oh_lc=SPY, x_ts=skew_running, win_dow=win_dow)
colnames(skew_running)
colnames(skew_running) <- "skew"
colnames(skew_rolling)
colnames(skew_rolling) <- "skewWA5"
SPY_design <- cbind(SPY_design, skew_running, skew_rolling)
colnames(SPY_design)
head(SPY_design)
tail(SPY_design)
SPY_design[1:5, 6:7]
1e13*SPY_design[1:5, 6:7]
1e12*SPY_design[1:5, 6:7]
SPY_design[, 6:7] <- 1e12*SPY_design[, 6:7]
head(SPY_design)
1e7*SPY_design[1:5, 4:5]
SPY_design[, 4:5] <- 1e8*SPY_design[, 4:5]
head(SPY_design)
SPY_design[, 2:3] <- 1e3*SPY_design[, 2:3]
head(SPY_design)
hurst_running <- hurst_ohlc(oh_lc=SPY)
head(hurst_running)
tail(hurst_running)
library(HighFreq)
library(HighFreq)
sharpe_running <- sharpe_ohlc(oh_lc=SPY)
head(sharpe_running)
sharpe_rolling <- v_wap(oh_lc=SPY, x_ts=sharpe_running, win_dow=win_dow)
head(sharpe_rolling)
tail(sharpe_rolling)
head(SPY_design)
colnames(sharpe_running) <- "sharpe_running"
colnames(sharpe_rolling) <- "sharpe_running.WA5"
SPY_design <- cbind(SPY_design, sharpe_running, sharpe_rolling)
head(SPY_design)
?runMax
install.packages("RcppRoll")
do_call(paste, c("a", "b", "c"), sep="/")
do_call(paste, li_st = ("a", "b", "c"), sep="/")
do_call(paste, list("a", "b", "c"), sep="/")
library(TTR)
win_dow
sum_rolling <- roll_sum(Cl(SPY), win_dow=win_dow)
head(sum_rolling)
foo <- runSum(x=Cl(SPY), n=win_dow)
head(foo)
tail(sum_rolling)
tail(foo)
library(microbenchmark)
summary(microbenchmark(
roll_sum=roll_sum(Cl(SPY), win_dow=win_dow),
runSum=runSum(x=Cl(SPY), n=win_dow),
times=10))[, c(1, 4, 5)]
install.packages("roll")
library(roll)
library(RcppRoll)
summary(microbenchmark(
roll_sum=rutils::roll_sum(Cl(SPY), win_dow=win_dow),
runSum=TTR::runSum(x=Cl(SPY), n=win_dow),
times=10))[, c(1, 4, 5)]
foo <- rutils::roll_sum(Cl(SPY), win_dow=win_dow)
bar <- RcppRoll::roll_sum(Cl(SPY), n=win_dow, align="right")
class(foo)
class(bar)
tail(bar)
dim(foo)
dim(bar)
tail(foo)
bar <- roll::roll_mean(Cl(SPY), width=win_dow)
dim(bar)
dim(bar)
tail(bar)
summary(microbenchmark(
roll_sum=rutils::roll_sum(Cl(SPY), win_dow=win_dow),
roll_sum_rcpp=RcppRoll::roll_sum(Cl(SPY), n=win_dow, align="right"),
roll_mean::roll_mean(Cl(SPY), width=win_dow),
runSum=TTR::runSum(x=Cl(SPY), n=win_dow),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
roll_sum=rutils::roll_sum(Cl(SPY), win_dow=win_dow),
roll_sum_rcpp=RcppRoll::roll_sum(Cl(SPY), n=win_dow, align="right"),
roll_mean=roll::roll_mean(Cl(SPY), width=win_dow),
runSum=TTR::runSum(x=Cl(SPY), n=win_dow),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
roll_sum=rutils::roll_sum(Cl(SPY), win_dow=win_dow),
roll_sum_rcpp=RcppRoll::roll_sum(Cl(SPY), n=win_dow, align="right"),
roll_mean=roll::roll_mean(Cl(SPY), width=win_dow),
runSum=TTR::runSum(x=Cl(SPY), n=win_dow),
times=10))[, c(1, 4, 5)]
?roll_maxr
foo <- rutils::roll_sum(Cl(SPY), win_dow=win_dow)
bar <- RcppRoll::roll_sum(Cl(SPY), n=win_dow, align="right")
dim(foo)
dim(bar)
foo_bar <- cbind(coredata(foo[-(1:4), ]), bar)
head(foo_bar)
tail(foo_bar)
sum(foo_bar[, 1] - foo_bar[, 2])
max(foo_bar[, 1] - foo_bar[, 2])
min(foo_bar[, 1] - foo_bar[, 2])
head(SPY_design)
getwd()
?save
save(SPY_design, file="SPY_design.RData")
ls()
ls()
oh_lc <- SPY
library(HighFreq)
xts:::to_period
win_dow <- 5
ls()
oh_lc <- SPY
ls()
var_ohlc <- rutils::roll_sum((Hi(oh_lc) - Lo(oh_lc)), win_dow=win_dow)/win_dow
x11()
chart_Series(var_ohlc["2013-11-12", ], name=paste(sym_bol, "Prices"))
head(var_ohlc)
tail(var_ohlc)
library(RcppRoll)
max_hi <- RcppRoll::roll_max(Hi(oh_lc), n=win_dow, align="right")
min_lo <- -RcppRoll::roll_max(-Lo(oh_lc), n=win_dow, align="right")
library(TTR)
max_hi <- TTR::runMax(x=Hi(oh_lc), n=win_dow)
min_lo <- -TTR::runMax(x=-Lo(oh_lc), n=win_dow)
var_ohlc_agg <- max_hi - min_lo
chart_Series(var_ohlc_agg["2013-11-12", ], name=paste(sym_bol, "Prices"))
sum(var_ohlc_agg==0)
tail(var_ohlc_agg)
dim(var_ohlc_agg)
dim(var_ohlc)
sum(is.na(var_ohlc_agg))
sum(is.na(var_ohlc))
head(var_ohlc_agg)
var_ohlc_agg[1:(win_dow-1), ] <- 0
sum(is.na(var_ohlc))
sum(var_ohlc_agg==0)
sum(var_ohlc==0)
hurst_rolling <- ifelse((var_ohlc==0) | (var_ohlc_agg==0),
1.0,
log(var_ohlc_agg/var_ohlc)/log(win_dow))
colnames(hurst_rolling) <- paste0(rutils::na_me(oh_lc), ".Hurst")
sum(is.na(hurst_rolling))
chart_Series(hurst_rolling["2013-11-12", ], name=paste(sym_bol, "Prices"))
sum(is.na(hurst_rolling))
head(hurst_rolling)
tail(hurst_rolling)
library(HighFreq)
var_ohlc_agg <- Cl(oh_lc) - rutils::lag_xts(Op(oh_lc), k=(win_dow-1))
var_ohlc <- rutils::roll_sum(vari_ance(oh_lc), win_dow=win_dow)[in_dex]/win_dow
var_ohlc <- rutils::roll_sum(vari_ance(oh_lc), win_dow=win_dow)/win_dow
sharpe_rolling <- ifelse((var_ohlc==0) | (var_ohlc_agg==0),
1.0,
log(var_ohlc_agg/var_ohlc)/log(win_dow))
colnames(sharpe_rolling) <- paste0(rutils::na_me(oh_lc), ".Sharpe")
head(sharpe_rolling)
tail(sharpe_rolling)
head(var_ohlc_agg)
head(var_ohlc_agg)
tail(var_ohlc_agg)
var_ohlc_agg <- (Cl(oh_lc) - rutils::lag_xts(Op(oh_lc), k=(win_dow-1)))/win_dow
win_dow
sum(is.na(var_ohlc_agg))
sum(is.na(var_ohlc))
sharpe_rolling <- ifelse((var_ohlc==0) | (var_ohlc_agg==0),
1.0,
log(var_ohlc_agg/var_ohlc)/log(win_dow))
foo <- sample(10)
foo
diff(foo)
var_ohlc_agg <- (Cl(oh_lc) - rutils::lag_xts(Op(oh_lc), k=(win_dow-1)))/win_dow
var_ohlc <- sqrt(rutils::roll_sum(run_variance(oh_lc), win_dow=win_dow)/win_dow)
library(HighFreq)
library(HighFreq)
ls()
SPY_design <- Vo(SPY)
returns_running <- run_returns(x_ts=SPY)
returns_rolling <- roll_vwap(oh_lc=SPY, x_ts=returns_running, win_dow=win_dow)
colnames(returns_running) <- "returns"
colnames(returns_rolling) <- "returns.WA5"
SPY_design <- cbind(SPY_design, returns_running, rolling_returns)
SPY_design <- cbind(SPY_design, returns_running, returns_rolling)
head(SPY_design)
var_running <- run_variance(oh_lc=SPY, calc_method="rogers.satchell")
var_rolling <- roll_vwap(oh_lc=SPY, x_ts=var_running, win_dow=win_dow)
colnames(var_running) <- "variance"
colnames(var_rolling) <- "variance.WA5"
SPY_design <- cbind(SPY_design, var_running, var_rolling)
head(SPY_design)
run_variance
foo <- c(1, diff(.index(SPY)))
head(foo)
24*3600
library(HighFreq)
library(HighFreq)
SPY_design <- Vo(SPY)
returns_running <- run_returns(x_ts=SPY)
returns_rolling <- roll_vwap(oh_lc=SPY, x_ts=returns_running, win_dow=win_dow)
colnames(returns_running) <- "returns"
colnames(returns_rolling) <- "returns.WA5"
SPY_design <- cbind(SPY_design, returns_running, returns_rolling)
head(SPY_design)
var_running <- run_variance(oh_lc=SPY, calc_method="rogers.satchell")
var_rolling <- roll_vwap(oh_lc=SPY, x_ts=var_running, win_dow=win_dow)
colnames(var_running) <- "variance"
colnames(var_rolling) <- "variance.WA5"
SPY_design <- cbind(SPY_design, var_running, var_rolling)
head(SPY_design)
skew_running <- run_skew(oh_lc=SPY)
skew_rolling <- roll_vwap(oh_lc=SPY, x_ts=skew_running, win_dow=win_dow)
colnames(skew_running) <- "skew"
colnames(skew_rolling) <- "skewWA5"
SPY_design <- cbind(SPY_design, skew_running, skew_rolling)
head(SPY_design)
sharpe_running <- run_sharpe(oh_lc=SPY)
sharpe_rolling <- roll_vwap(oh_lc=SPY, x_ts=sharpe_running, win_dow=win_dow)
colnames(sharpe_running) <- "sharpe_running"
colnames(sharpe_rolling) <- "sharpe_running.WA5"
SPY_design <- cbind(SPY_design, sharpe_running, sharpe_rolling)
head(SPY_design)
colnames(SPY_design)
colnames(SPY_design)[7]
foo <- colnames(SPY_design)
foo[7] <- "skew.WA5"
colnames(SPY_design) <- foo
colnames(SPY_design)
library(HighFreq)
sharpe_rolling <- roll_sharpe(oh_lc=SPY, win_dow=win_dow)
colnames(sharpe_rolling) <- "sharpe_rolling"
chart_Series(sharpe_rolling["2013-11-12", ], name=paste(sym_bol, "sharpe_rolling"))
x11()
chart_Series(sharpe_rolling["2013-11-12", ], name=paste(sym_bol, "sharpe_rolling"))
head(SPY_design)
SPY_design <- cbind(SPY_design, sharpe_rolling)
head(SPY_design)
head(SPY_design["2013-11-12", ])
head(SPY_design["2013-11-12", ], 7)
save(SPY_design, file = "C:/Develop/data/SPY_design")
hurst_rolling <- roll_hurst(oh_lc=SPY, win_dow=win_dow)
colnames(hurst_rolling) <- "hurst_rolling"
chart_Series(hurst_rolling["2013-11-12", ], name=paste(sym_bol, "hurst_rolling"))
head(SPY_design["2013-11-12", ], 7)
SPY_design <- cbind(SPY_design, hurst_rolling)
head(SPY_design["2013-11-12", ], 7)
save(SPY_design, file = "C:/Develop/data/SPY_design.RData")
library(HighFreq)
library(HighFreq)
system("R CMD Rd2pdf C:/Develop/R/HighFreq")
library(HighFreq)
win_dow <- 5
library(HighFreq)
library(HighFreq)
library(HighFreq)
library(HighFreq)
data_dir <- "E:/mktdata/sec/"
output_dir <- "E:/output/data/"
sym_bol <- "VXX"
library(HighFreq)
save_scrub_agg(sym_bol, data_dir=data_dir, output_dir=output_dir)
data_dir
sym_bol
