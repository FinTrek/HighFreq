% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/HighFreq.R
\name{price_jumps}
\alias{price_jumps}
\title{Identify isolated price jumps in a univariate \code{xts} time series of prices,
based on pairs of large neighboring returns of opposite sign.}
\usage{
price_jumps(time_series, vol_window = 51, vol_mult = 2)
}
\arguments{
\item{time_series}{univariate \code{xts} time series of prices.}

\item{vol_window}{number of data points for estimating running volatility.}

\item{vol_mult}{volatility multiplier.}
}
\value{
\code{logical vector}.
}
\description{
Identify isolated price jumps in a univariate \code{xts} time series of prices,
based on pairs of large neighboring returns of opposite sign.
}
\details{
Isolated price jumps are single prices that are very different from
  neighboring values.  Price jumps create pairs of large neighboring returns
  of opposite sign. The function \code{price_jumps} first calculates simple
  returns from prices. Then it calculates the running volatility of returns
  as a quantile of returns over a sliding window. Jump prices are identified
  as those where neighboring returns both exceed a multiple of the running
  volatility, but the sum of those returns doesn't exceed it.
}
\examples{
# create xts time series
x_ts <- xts(x=rnorm(1000), order.by=(Sys.time()-3600*(1:1000)))
# scrub jump prices
x_ts <- x_ts[!price_jumps(x_ts, vol_mult=1.0)]
}

